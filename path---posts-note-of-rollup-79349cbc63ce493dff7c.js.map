{"version":3,"sources":["webpack:///path---posts-note-of-rollup-79349cbc63ce493dff7c.js","webpack:///./.cache/json/posts-note-of-rollup.json"],"names":["webpackJsonp","505","module","exports","data","markdownRemark","html","frontmatter","title","date","tags","fields","slug","pathContext"],"mappings":"AAAAA,cAAc,iBAERC,IACA,SAAUC,EAAQC,GCHxBD,EAAAC,SAAkBC,MAAQC,gBAAkBC,KAAA,+mOAA2rNC,aAAssBC,MAAA,YAAAC,KAAA,gBAAAC,MAAA,YAA8DC,QAAWC,KAAA,sBAA4BC,aAAgBD,KAAA","file":"path---posts-note-of-rollup-79349cbc63ce493dff7c.js","sourcesContent":["webpackJsonp([139344332921570],{\n\n/***/ 505:\n/***/ (function(module, exports) {\n\n\tmodule.exports = {\"data\":{\"markdownRemark\":{\"html\":\"<p>Rollup 是一个模块打包工具，其利用了 ES6 模块的特性，只将需要的代码进行打包，通过这种方式可以大大减小打包的体积（不用打包整个），官方称这个特性为 Tree Shaking。另外，Webpack 2 也支持了 Tree Shaking，因此 Tree Shaking 已经不能作为 Rollup 的一个优势了，不过，Rollup 的配置相较于 Webpack 更加简单明了，这算是 Rollup 的一个优势。不过，Rollup 的功能也没有 Webpack 多，比如说 Rollup 不支持 Code Splitting，各种静态资源的处理。总的来说，Rollup 更适合库的打包，比如说 React，Vue 这类库。而 Webpack 则更适合用于 Web App。</p>\\n<h2>配置</h2>\\n<p>可以在 CLI 中给 Rollup 传参数，也可以写到配置文件里面，如果配置文件里写了，CLI 又传了相关的参数，则 CLI 的参数会覆盖掉配置文件里的。</p>\\n<div class=\\\"gatsby-highlight\\\">\\n      <pre class=\\\"language-js\\\"><code class=\\\"language-js\\\"><span class=\\\"token keyword\\\">import</span> resolve <span class=\\\"token keyword\\\">from</span> <span class=\\\"token string\\\">'rollup-plugin-node-resolve'</span><span class=\\\"token punctuation\\\">;</span>\\n<span class=\\\"token keyword\\\">import</span> babel <span class=\\\"token keyword\\\">from</span> <span class=\\\"token string\\\">'rollup-plugin-babel'</span><span class=\\\"token punctuation\\\">;</span>\\n<span class=\\\"token keyword\\\">import</span> commonjs <span class=\\\"token keyword\\\">from</span> <span class=\\\"token string\\\">'rollup-plugin-commonjs'</span><span class=\\\"token punctuation\\\">;</span>\\n\\n<span class=\\\"token keyword\\\">export</span> <span class=\\\"token keyword\\\">default</span> <span class=\\\"token punctuation\\\">{</span>\\n  entry<span class=\\\"token punctuation\\\">:</span> <span class=\\\"token string\\\">'src/main.js'</span><span class=\\\"token punctuation\\\">,</span>\\n  format<span class=\\\"token punctuation\\\">:</span> <span class=\\\"token string\\\">'cjs'</span><span class=\\\"token punctuation\\\">,</span>\\n  plugins<span class=\\\"token punctuation\\\">:</span> <span class=\\\"token punctuation\\\">[</span>\\n    <span class=\\\"token function\\\">resolve</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">,</span>\\n    <span class=\\\"token function\\\">commonjs</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">,</span>\\n    <span class=\\\"token function\\\">babel</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">{</span>\\n      exclude<span class=\\\"token punctuation\\\">:</span> <span class=\\\"token string\\\">'node_modules/**'</span>\\n    <span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">)</span>\\n  <span class=\\\"token punctuation\\\">]</span><span class=\\\"token punctuation\\\">,</span>\\n  dest<span class=\\\"token punctuation\\\">:</span> <span class=\\\"token string\\\">'dist/bundle.js'</span><span class=\\\"token punctuation\\\">,</span>\\n  sourceMap<span class=\\\"token punctuation\\\">:</span> <span class=\\\"token boolean\\\">true</span><span class=\\\"token punctuation\\\">,</span>\\n<span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">;</span></code></pre>\\n      </div>\\n<p>以上是一个简单的配置文件，其指定了入口文件(entry)，打包成 <code class=\\\"language-text\\\">commonjs</code> 形式的模块，使用到了几个插件，指定了打包地址为(dest)，开启了 sourceMap 功能。需要注意的是，Rollup 的配置文件是一个 JS 文件，虽然其用到了 ES6 的模块功能，但是除此之外，其并不会对代码进行转换，简单来说就是你在里面写了你 Node 版本不支持的特性代码的话是会出错的。另外，Rollup 默认是只认 ES6 模块的，所以需要借助插件来帮助你引入其他形式的模块。</p>\\n<h2>Tree Shaking</h2>\\n<div class=\\\"gatsby-highlight\\\">\\n      <pre class=\\\"language-js\\\"><code class=\\\"language-js\\\"><span class=\\\"token comment\\\">// maths.js</span>\\n<span class=\\\"token comment\\\">// This function isn't used anywhere, so</span>\\n<span class=\\\"token comment\\\">// Rollup excludes it from the bundle...</span>\\n<span class=\\\"token keyword\\\">export</span> <span class=\\\"token keyword\\\">function</span> <span class=\\\"token function\\\">square</span> <span class=\\\"token punctuation\\\">(</span> x <span class=\\\"token punctuation\\\">)</span> <span class=\\\"token punctuation\\\">{</span>\\n\\t<span class=\\\"token keyword\\\">return</span> x <span class=\\\"token operator\\\">*</span> x<span class=\\\"token punctuation\\\">;</span>\\n<span class=\\\"token punctuation\\\">}</span>\\n\\n<span class=\\\"token comment\\\">// This function gets included</span>\\n<span class=\\\"token keyword\\\">export</span> <span class=\\\"token keyword\\\">function</span> <span class=\\\"token function\\\">cube</span> <span class=\\\"token punctuation\\\">(</span> x <span class=\\\"token punctuation\\\">)</span> <span class=\\\"token punctuation\\\">{</span>\\n\\t<span class=\\\"token comment\\\">// rewrite this as `square( x ) * x`</span>\\n\\t<span class=\\\"token comment\\\">// and see what happens!</span>\\n\\t<span class=\\\"token keyword\\\">return</span> x <span class=\\\"token operator\\\">*</span> x <span class=\\\"token operator\\\">*</span> x<span class=\\\"token punctuation\\\">;</span>\\n<span class=\\\"token punctuation\\\">}</span></code></pre>\\n      </div>\\n<div class=\\\"gatsby-highlight\\\">\\n      <pre class=\\\"language-js\\\"><code class=\\\"language-js\\\"><span class=\\\"token comment\\\">// main.js</span>\\n<span class=\\\"token keyword\\\">import</span> <span class=\\\"token punctuation\\\">{</span> cube <span class=\\\"token punctuation\\\">}</span> <span class=\\\"token keyword\\\">from</span> <span class=\\\"token string\\\">'./maths.js'</span><span class=\\\"token punctuation\\\">;</span>\\nconsole<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">log</span><span class=\\\"token punctuation\\\">(</span> <span class=\\\"token function\\\">cube</span><span class=\\\"token punctuation\\\">(</span> <span class=\\\"token number\\\">5</span> <span class=\\\"token punctuation\\\">)</span> <span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span> <span class=\\\"token comment\\\">// 125</span></code></pre>\\n      </div>\\n<p>假设 <code class=\\\"language-text\\\">main.js</code> 为入口文件，打包成 es6 模块，最终结果是这样的：</p>\\n<div class=\\\"gatsby-highlight\\\">\\n      <pre class=\\\"language-js\\\"><code class=\\\"language-js\\\"><span class=\\\"token comment\\\">// This function isn't used anywhere, so</span>\\n<span class=\\\"token comment\\\">// Rollup excludes it from the bundle...</span>\\n\\n\\n<span class=\\\"token comment\\\">// This function gets included</span>\\n<span class=\\\"token keyword\\\">function</span> <span class=\\\"token function\\\">cube</span> <span class=\\\"token punctuation\\\">(</span> x <span class=\\\"token punctuation\\\">)</span> <span class=\\\"token punctuation\\\">{</span>\\n\\t<span class=\\\"token comment\\\">// rewrite this as `square( x ) * x`</span>\\n\\t<span class=\\\"token comment\\\">// and see what happens!</span>\\n\\t<span class=\\\"token keyword\\\">return</span> x <span class=\\\"token operator\\\">*</span> x <span class=\\\"token operator\\\">*</span> x<span class=\\\"token punctuation\\\">;</span>\\n<span class=\\\"token punctuation\\\">}</span>\\n\\nconsole<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">log</span><span class=\\\"token punctuation\\\">(</span> <span class=\\\"token function\\\">cube</span><span class=\\\"token punctuation\\\">(</span> <span class=\\\"token number\\\">5</span> <span class=\\\"token punctuation\\\">)</span> <span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span> <span class=\\\"token comment\\\">// 125</span></code></pre>\\n      </div>\\n<p>看，<code class=\\\"language-text\\\">square</code> 函数没有被打包进来，这就是 Tree Shaking 的能力。</p>\\n<p>Tree Shaking 与 Dead Code Elimination 的区别是，Dead Code Elimination 是先打包出了一个具有冗余代码的模块，然后检测 Dead Code，再删除相关代码。而 Tree Shaking 从一开始就没有将这些代码打包进来。</p>\\n<h2>参考资料</h2>\\n<ol>\\n<li><a href=\\\"https://rollupjs.org/\\\">rollup.js</a></li>\\n<li><a href=\\\"https://webpack.js.org/guides/tree-shaking/\\\">Tree Shaking</a></li>\\n<li><a href=\\\"https://medium.com/modus-create-front-end-development/webpack-2-tree-shaking-configuration-9f1de90f3233\\\">Webpack 2 Tree Shaking Configuration – Modus Create: Front End Development – Medium</a></li>\\n</ol>\",\"frontmatter\":{\"title\":\"Rollup 小记\",\"date\":\"July 09, 2017\",\"tags\":[\"前端\",\"打包\"]},\"fields\":{\"slug\":\"/note-of-rollup/\"}}},\"pathContext\":{\"slug\":\"/note-of-rollup/\"}}\n\n/***/ })\n\n});\n\n\n// WEBPACK FOOTER //\n// path---posts-note-of-rollup-79349cbc63ce493dff7c.js","module.exports = {\"data\":{\"markdownRemark\":{\"html\":\"<p>Rollup 是一个模块打包工具，其利用了 ES6 模块的特性，只将需要的代码进行打包，通过这种方式可以大大减小打包的体积（不用打包整个），官方称这个特性为 Tree Shaking。另外，Webpack 2 也支持了 Tree Shaking，因此 Tree Shaking 已经不能作为 Rollup 的一个优势了，不过，Rollup 的配置相较于 Webpack 更加简单明了，这算是 Rollup 的一个优势。不过，Rollup 的功能也没有 Webpack 多，比如说 Rollup 不支持 Code Splitting，各种静态资源的处理。总的来说，Rollup 更适合库的打包，比如说 React，Vue 这类库。而 Webpack 则更适合用于 Web App。</p>\\n<h2>配置</h2>\\n<p>可以在 CLI 中给 Rollup 传参数，也可以写到配置文件里面，如果配置文件里写了，CLI 又传了相关的参数，则 CLI 的参数会覆盖掉配置文件里的。</p>\\n<div class=\\\"gatsby-highlight\\\">\\n      <pre class=\\\"language-js\\\"><code class=\\\"language-js\\\"><span class=\\\"token keyword\\\">import</span> resolve <span class=\\\"token keyword\\\">from</span> <span class=\\\"token string\\\">'rollup-plugin-node-resolve'</span><span class=\\\"token punctuation\\\">;</span>\\n<span class=\\\"token keyword\\\">import</span> babel <span class=\\\"token keyword\\\">from</span> <span class=\\\"token string\\\">'rollup-plugin-babel'</span><span class=\\\"token punctuation\\\">;</span>\\n<span class=\\\"token keyword\\\">import</span> commonjs <span class=\\\"token keyword\\\">from</span> <span class=\\\"token string\\\">'rollup-plugin-commonjs'</span><span class=\\\"token punctuation\\\">;</span>\\n\\n<span class=\\\"token keyword\\\">export</span> <span class=\\\"token keyword\\\">default</span> <span class=\\\"token punctuation\\\">{</span>\\n  entry<span class=\\\"token punctuation\\\">:</span> <span class=\\\"token string\\\">'src/main.js'</span><span class=\\\"token punctuation\\\">,</span>\\n  format<span class=\\\"token punctuation\\\">:</span> <span class=\\\"token string\\\">'cjs'</span><span class=\\\"token punctuation\\\">,</span>\\n  plugins<span class=\\\"token punctuation\\\">:</span> <span class=\\\"token punctuation\\\">[</span>\\n    <span class=\\\"token function\\\">resolve</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">,</span>\\n    <span class=\\\"token function\\\">commonjs</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">,</span>\\n    <span class=\\\"token function\\\">babel</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">{</span>\\n      exclude<span class=\\\"token punctuation\\\">:</span> <span class=\\\"token string\\\">'node_modules/**'</span>\\n    <span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">)</span>\\n  <span class=\\\"token punctuation\\\">]</span><span class=\\\"token punctuation\\\">,</span>\\n  dest<span class=\\\"token punctuation\\\">:</span> <span class=\\\"token string\\\">'dist/bundle.js'</span><span class=\\\"token punctuation\\\">,</span>\\n  sourceMap<span class=\\\"token punctuation\\\">:</span> <span class=\\\"token boolean\\\">true</span><span class=\\\"token punctuation\\\">,</span>\\n<span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">;</span></code></pre>\\n      </div>\\n<p>以上是一个简单的配置文件，其指定了入口文件(entry)，打包成 <code class=\\\"language-text\\\">commonjs</code> 形式的模块，使用到了几个插件，指定了打包地址为(dest)，开启了 sourceMap 功能。需要注意的是，Rollup 的配置文件是一个 JS 文件，虽然其用到了 ES6 的模块功能，但是除此之外，其并不会对代码进行转换，简单来说就是你在里面写了你 Node 版本不支持的特性代码的话是会出错的。另外，Rollup 默认是只认 ES6 模块的，所以需要借助插件来帮助你引入其他形式的模块。</p>\\n<h2>Tree Shaking</h2>\\n<div class=\\\"gatsby-highlight\\\">\\n      <pre class=\\\"language-js\\\"><code class=\\\"language-js\\\"><span class=\\\"token comment\\\">// maths.js</span>\\n<span class=\\\"token comment\\\">// This function isn't used anywhere, so</span>\\n<span class=\\\"token comment\\\">// Rollup excludes it from the bundle...</span>\\n<span class=\\\"token keyword\\\">export</span> <span class=\\\"token keyword\\\">function</span> <span class=\\\"token function\\\">square</span> <span class=\\\"token punctuation\\\">(</span> x <span class=\\\"token punctuation\\\">)</span> <span class=\\\"token punctuation\\\">{</span>\\n\\t<span class=\\\"token keyword\\\">return</span> x <span class=\\\"token operator\\\">*</span> x<span class=\\\"token punctuation\\\">;</span>\\n<span class=\\\"token punctuation\\\">}</span>\\n\\n<span class=\\\"token comment\\\">// This function gets included</span>\\n<span class=\\\"token keyword\\\">export</span> <span class=\\\"token keyword\\\">function</span> <span class=\\\"token function\\\">cube</span> <span class=\\\"token punctuation\\\">(</span> x <span class=\\\"token punctuation\\\">)</span> <span class=\\\"token punctuation\\\">{</span>\\n\\t<span class=\\\"token comment\\\">// rewrite this as `square( x ) * x`</span>\\n\\t<span class=\\\"token comment\\\">// and see what happens!</span>\\n\\t<span class=\\\"token keyword\\\">return</span> x <span class=\\\"token operator\\\">*</span> x <span class=\\\"token operator\\\">*</span> x<span class=\\\"token punctuation\\\">;</span>\\n<span class=\\\"token punctuation\\\">}</span></code></pre>\\n      </div>\\n<div class=\\\"gatsby-highlight\\\">\\n      <pre class=\\\"language-js\\\"><code class=\\\"language-js\\\"><span class=\\\"token comment\\\">// main.js</span>\\n<span class=\\\"token keyword\\\">import</span> <span class=\\\"token punctuation\\\">{</span> cube <span class=\\\"token punctuation\\\">}</span> <span class=\\\"token keyword\\\">from</span> <span class=\\\"token string\\\">'./maths.js'</span><span class=\\\"token punctuation\\\">;</span>\\nconsole<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">log</span><span class=\\\"token punctuation\\\">(</span> <span class=\\\"token function\\\">cube</span><span class=\\\"token punctuation\\\">(</span> <span class=\\\"token number\\\">5</span> <span class=\\\"token punctuation\\\">)</span> <span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span> <span class=\\\"token comment\\\">// 125</span></code></pre>\\n      </div>\\n<p>假设 <code class=\\\"language-text\\\">main.js</code> 为入口文件，打包成 es6 模块，最终结果是这样的：</p>\\n<div class=\\\"gatsby-highlight\\\">\\n      <pre class=\\\"language-js\\\"><code class=\\\"language-js\\\"><span class=\\\"token comment\\\">// This function isn't used anywhere, so</span>\\n<span class=\\\"token comment\\\">// Rollup excludes it from the bundle...</span>\\n\\n\\n<span class=\\\"token comment\\\">// This function gets included</span>\\n<span class=\\\"token keyword\\\">function</span> <span class=\\\"token function\\\">cube</span> <span class=\\\"token punctuation\\\">(</span> x <span class=\\\"token punctuation\\\">)</span> <span class=\\\"token punctuation\\\">{</span>\\n\\t<span class=\\\"token comment\\\">// rewrite this as `square( x ) * x`</span>\\n\\t<span class=\\\"token comment\\\">// and see what happens!</span>\\n\\t<span class=\\\"token keyword\\\">return</span> x <span class=\\\"token operator\\\">*</span> x <span class=\\\"token operator\\\">*</span> x<span class=\\\"token punctuation\\\">;</span>\\n<span class=\\\"token punctuation\\\">}</span>\\n\\nconsole<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">log</span><span class=\\\"token punctuation\\\">(</span> <span class=\\\"token function\\\">cube</span><span class=\\\"token punctuation\\\">(</span> <span class=\\\"token number\\\">5</span> <span class=\\\"token punctuation\\\">)</span> <span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span> <span class=\\\"token comment\\\">// 125</span></code></pre>\\n      </div>\\n<p>看，<code class=\\\"language-text\\\">square</code> 函数没有被打包进来，这就是 Tree Shaking 的能力。</p>\\n<p>Tree Shaking 与 Dead Code Elimination 的区别是，Dead Code Elimination 是先打包出了一个具有冗余代码的模块，然后检测 Dead Code，再删除相关代码。而 Tree Shaking 从一开始就没有将这些代码打包进来。</p>\\n<h2>参考资料</h2>\\n<ol>\\n<li><a href=\\\"https://rollupjs.org/\\\">rollup.js</a></li>\\n<li><a href=\\\"https://webpack.js.org/guides/tree-shaking/\\\">Tree Shaking</a></li>\\n<li><a href=\\\"https://medium.com/modus-create-front-end-development/webpack-2-tree-shaking-configuration-9f1de90f3233\\\">Webpack 2 Tree Shaking Configuration – Modus Create: Front End Development – Medium</a></li>\\n</ol>\",\"frontmatter\":{\"title\":\"Rollup 小记\",\"date\":\"July 09, 2017\",\"tags\":[\"前端\",\"打包\"]},\"fields\":{\"slug\":\"/note-of-rollup/\"}}},\"pathContext\":{\"slug\":\"/note-of-rollup/\"}}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/json-loader!./.cache/json/posts-note-of-rollup.json\n// module id = 505\n// module chunks = 139344332921570"],"sourceRoot":""}