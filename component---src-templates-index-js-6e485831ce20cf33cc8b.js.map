{"version":3,"sources":["webpack:///./src/templates/index.js"],"names":["MyLink","g","Link","textDecoration","borderBottom","color","transition","NavLink","props","test","to","url","text","data","pathContext","group","index","first","last","pageCount","previousUrl","toString","nextUrl","map","node","key","id","H3","marginBottom","rhythm","fields","slug","css","frontmatter","title","Div","date","P","fontSize","excerpt","style","marginTop","className","display","marginRight"],"mappings":"2FAAA,0FAMMA,EAASC,YAAEC,IAAFD,CAAQ,CACrBE,eAAgB,OAChBC,aAAc,oBACdC,MAAO,OACPC,WAAY,WACZ,SAAU,CACRF,aAAc,oBAIZG,EAAU,SAAAC,GACd,OAAKA,EAAMC,KAGF,KAFA,gBAAC,IAAD,CAAMC,GAAIF,EAAMG,KAAMH,EAAMI,OAMxB,sBAA2B,EAAxBC,KAAyB,IAAnBC,EAAkB,EAAlBA,YACdC,EAAyCD,EAAzCC,MAAOC,EAAkCF,EAAlCE,MAAOC,EAA2BH,EAA3BG,MAAOC,EAAoBJ,EAApBI,KAAMC,EAAcL,EAAdK,UAC7BC,EAAcJ,EAAQ,GAAM,EAAI,IAAMA,EAAQ,GAAGK,WACjDC,GAAWN,EAAQ,GAAGK,WAE5B,OACE,gBAAC,IAAD,KACE,2BACGN,EAAMQ,KAAI,gBAAGC,EAAH,EAAGA,KAAH,OACT,uBAAKC,IAAKD,EAAKE,IACb,gBAAC,IAAEC,GAAH,CAAMC,aAAcC,YAAO,EAAI,IAC7B,gBAAC7B,EAAD,CACEU,GAAE,GAAKc,EAAKM,OAAOC,KACnBC,IAAK,CAAE7B,eAAe,OAASC,aAAc,oBAAqBC,MAAO,SAExEmB,EAAKS,YAAYC,QAGtB,gBAAC,IAAEC,IAAH,CAAO9B,MAAM,OAAOuB,aAAcC,YAAO,EAAI,IAC1CL,EAAKS,YAAYG,MAEpB,gBAAC,IAAEC,EAAH,CAAKhC,MAAM,OAAOiC,SAAS,QACxBd,EAAKe,aAIZ,uBAAKC,MAAO,CAAEC,UAAW,SACvB,uBACEC,UAAU,eACVF,MAAO,CAAEG,QAAS,eAAgBC,YAAa3B,EAAQ,IAAM,SAE7D,gBAACV,EAAD,CAASE,KAAMQ,EAAON,IAAKS,EAAaR,KAAK,UAE/C,uBAAK4B,MAAO,CAAEG,QAAS,eAAgBC,YAAa,OAAQvC,MAAO,SAAnE,KACKW,EADL,UACmBG,EADnB,MAGA,uBAAKuB,UAAU,WAAWF,MAAO,CAAEG,QAAS,iBAC1C,gBAACpC,EAAD,CAASE,KAAMS,EAAMP,IAAKW,EAASV,KAAK,e","file":"component---src-templates-index-js-6e485831ce20cf33cc8b.js","sourcesContent":["import React from 'react'\nimport g from 'glamorous'\nimport Link from 'gatsby-link'\nimport { rhythm } from '../utils/typography'\nimport Layout from '../components/layout'\n\nconst MyLink = g(Link)({\n  textDecoration: 'none',\n  borderBottom: '1px solid #ececec',\n  color: '#000',\n  transition: 'all 0.2s',\n  ':hover': {\n    borderBottom: '1px solid #000',\n  },\n})\n\nconst NavLink = props => {\n  if (!props.test) {\n    return <Link to={props.url}>{props.text}</Link>\n  } else {\n    return null\n  }\n}\n\nexport default ({ data, pathContext }) => {\n  const { group, index, first, last, pageCount } = pathContext\n  const previousUrl = index - 1 === 1 ? '' : (index - 1).toString()\n  const nextUrl = (index + 1).toString()\n\n  return (\n    <Layout>\n      <div>\n        {group.map(({ node }) => (\n          <div key={node.id}>\n            <g.H3 marginBottom={rhythm(1 / 4)}>\n              <MyLink\n                to={`${node.fields.slug}`}\n                css={{ textDecoration: `none`, borderBottom: '1px solid #ececec', color: '#000' }}\n              >\n                {node.frontmatter.title}\n              </MyLink>\n            </g.H3>\n            <g.Div color=\"#555\" marginBottom={rhythm(1 / 8)}>\n              {node.frontmatter.date}\n            </g.Div>\n            <g.P color=\"#888\" fontSize=\"16px\">\n              {node.excerpt}\n            </g.P>\n          </div>\n        ))}\n        <div style={{ marginTop: '64px' }}>\n          <div\n            className=\"previousLink\"\n            style={{ display: 'inline-block', marginRight: first ? '0' : '16px' }}\n          >\n            <NavLink test={first} url={previousUrl} text=\"← 更新\" />\n          </div>\n          <div style={{ display: 'inline-block', marginRight: '16px', color: '#666' }}>\n            第 {index} 页 / 共 {pageCount} 页\n          </div>\n          <div className=\"nextLink\" style={{ display: 'inline-block' }}>\n            <NavLink test={last} url={nextUrl} text=\"更旧 →\" />\n          </div>\n        </div>\n      </div>\n    </Layout>\n  )\n}\n\n// export const query = graphql`\n//   query IndexQuery {\n//     allMarkdownRemark(sort: { fields: [frontmatter___date], order: DESC }) {\n//       totalCount\n//       edges {\n//         node {\n//           id\n//           timeToRead\n//           frontmatter {\n//             title\n//             date(formatString: \"MMM DD, YYYY\")\n//             tags\n//           }\n//           fields {\n//             slug\n//           }\n//           excerpt\n//         }\n//       }\n//     }\n//   }\n// `\n"],"sourceRoot":""}