{"version":3,"sources":["webpack://blog-of-zhusat/./src/templates/index.js"],"names":["MyLink","g","Link","textDecoration","borderBottom","color","transition","NavLink","props","test","to","url","text","data","pageContext","group","index","first","last","pageCount","previousUrl","toString","nextUrl","map","node","key","id","marginBottom","rhythm","fields","slug","css","frontmatter","title","date","fontSize","excerpt","style","marginTop","className","display","marginRight"],"mappings":"0LAMMA,GAASC,SAAEC,KAAFD,CAAQ,CACrBE,eAAgB,OAChBC,aAAc,oBACdC,MAAO,OACPC,WAAY,WACZ,SAAU,CACRF,aAAc,oBAIZG,EAAU,SAAAC,GACd,OAAKA,EAAMC,KAGF,KAFA,gBAAC,KAAD,CAAMC,GAAIF,EAAMG,KAAMH,EAAMI,OAmDvC,UA7Ca,SAAC,GAA0B,EAAxBC,KAAyB,IAAnBC,EAAkB,EAAlBA,YACZC,EAAyCD,EAAzCC,MAAOC,EAAkCF,EAAlCE,MAAOC,EAA2BH,EAA3BG,MAAOC,EAAoBJ,EAApBI,KAAMC,EAAcL,EAAdK,UAC7BC,EAAcJ,EAAQ,GAAM,EAAI,IAAM,KAAOA,EAAQ,GAAGK,WACxDC,EAAU,KAAON,EAAQ,GAAGK,WAElC,OACE,gBAAC,IAAD,KACE,2BACGN,EAAMQ,KAAI,gBAAGC,EAAH,EAAGA,KAAH,OACT,uBAAKC,IAAKD,EAAKE,IACb,gBAAC,SAAD,CAAMC,cAAcC,QAAO,EAAI,IAC7B,gBAAC5B,EAAD,CACEU,GAAE,GAAKc,EAAKK,OAAOC,KACnBC,IAAK,CAAE5B,eAAe,OAASC,aAAc,oBAAqBC,MAAO,SAExEmB,EAAKQ,YAAYC,QAGtB,gBAAC,UAAD,CAAO5B,MAAM,OAAOsB,cAAcC,QAAO,EAAI,IAC1CJ,EAAKQ,YAAYE,MAEpB,gBAAC,QAAD,CAAK7B,MAAM,OAAO8B,SAAS,QACxBX,EAAKY,aAIZ,uBAAKC,MAAO,CAAEC,UAAW,SACvB,uBACEC,UAAU,eACVF,MAAO,CAAEG,QAAS,eAAgBC,YAAaxB,EAAQ,IAAM,SAE7D,gBAACV,EAAD,CAASE,KAAMQ,EAAON,IAAKS,EAAaR,KAAK,UAE/C,uBAAKyB,MAAO,CAAEG,QAAS,eAAgBC,YAAa,OAAQpC,MAAO,SAAnE,KACKW,EADL,UACmBG,EADnB,MAGA,uBAAKoB,UAAU,WAAWF,MAAO,CAAEG,QAAS,iBAC1C,gBAACjC,EAAD,CAASE,KAAMS,EAAMP,IAAKW,EAASV,KAAK","file":"component---src-templates-index-js-92f13f65751450f22fe8.js","sourcesContent":["import React from 'react'\nimport g from 'glamorous'\nimport Link from 'gatsby-link'\nimport { rhythm } from '../utils/typography'\nimport Layout from '../components/layout'\n\nconst MyLink = g(Link)({\n  textDecoration: 'none',\n  borderBottom: '1px solid #ececec',\n  color: '#000',\n  transition: 'all 0.2s',\n  ':hover': {\n    borderBottom: '1px solid #000',\n  },\n})\n\nconst NavLink = props => {\n  if (!props.test) {\n    return <Link to={props.url}>{props.text}</Link>\n  } else {\n    return null\n  }\n}\n\nconst List = ({ data, pageContext }) => {\n  const { group, index, first, last, pageCount } = pageContext\n  const previousUrl = index - 1 === 1 ? '/' : \"/\" + (index - 1).toString()\n  const nextUrl = \"/\" + (index + 1).toString()\n\n  return (\n    <Layout>\n      <div>\n        {group.map(({ node }) => (\n          <div key={node.id}>\n            <g.H3 marginBottom={rhythm(1 / 4)}>\n              <MyLink\n                to={`${node.fields.slug}`}\n                css={{ textDecoration: `none`, borderBottom: '1px solid #ececec', color: '#000' }}\n              >\n                {node.frontmatter.title}\n              </MyLink>\n            </g.H3>\n            <g.Div color=\"#555\" marginBottom={rhythm(1 / 8)}>\n              {node.frontmatter.date}\n            </g.Div>\n            <g.P color=\"#888\" fontSize=\"16px\">\n              {node.excerpt}\n            </g.P>\n          </div>\n        ))}\n        <div style={{ marginTop: '64px' }}>\n          <div\n            className=\"previousLink\"\n            style={{ display: 'inline-block', marginRight: first ? '0' : '16px' }}\n          >\n            <NavLink test={first} url={previousUrl} text=\"← 更新\" />\n          </div>\n          <div style={{ display: 'inline-block', marginRight: '16px', color: '#666' }}>\n            第 {index} 页 / 共 {pageCount} 页\n          </div>\n          <div className=\"nextLink\" style={{ display: 'inline-block' }}>\n            <NavLink test={last} url={nextUrl} text=\"更旧 →\" />\n          </div>\n        </div>\n      </div>\n    </Layout>\n  )\n}\n\nexport default List\n\n// export const query = graphql`\n//   query IndexQuery {\n//     allMarkdownRemark(sort: { fields: [frontmatter___date], order: DESC }) {\n//       totalCount\n//       edges {\n//         node {\n//           id\n//           timeToRead\n//           frontmatter {\n//             title\n//             date(formatString: \"MMM DD, YYYY\")\n//             tags\n//           }\n//           fields {\n//             slug\n//           }\n//           excerpt\n//         }\n//       }\n//     }\n//   }\n// `\n"],"sourceRoot":""}