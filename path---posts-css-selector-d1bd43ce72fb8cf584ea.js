webpackJsonp([59397537136212],{478:function(n,t){n.exports={data:{markdownRemark:{html:'<p>最近需要写一些前端的东西，几个月前也是学习了前端的知识，然后做了一些东西出来，几个月不写不看，发现忘了好多东西，以前也没做什么笔记，现在觉得要是当时做了笔记会好很多，所以现在写一些笔记可以给以后回顾。</p>\n<!-- more -->\n<h1>正文</h1>\n<h2>常用的选择器</h2>\n<h3>类型选择器</h3>\n<div class="gatsby-highlight">\n      <pre class="language-text"><code class="language-text">p {color: black;}\nh1 {font-weight: bold;}</code></pre>\n      </div>\n<h3>后代选择器</h3>\n<div class="gatsby-highlight">\n      <pre class="language-text"><code class="language-text">/* 作用于 blockquote 的所有标签为 p 的后代 */\nblockquote p {padding-left: 2em;}</code></pre>\n      </div>\n<h3>ID 选择器与类选择器</h3>\n<div class="gatsby-highlight">\n      <pre class="language-text"><code class="language-text">#intro {font-weight: bold;}\n.date-posted {color: #ccc;}</code></pre>\n      </div>\n<h3>伪类</h3>\n<div class="gatsby-highlight">\n      <pre class="language-text"><code class="language-text">a:link {color:blue;}\n\n/* 作用于已经访问过并且鼠标悬停在上面的 a 元素 */\na:visited:hover {color: blue;}</code></pre>\n      </div>\n<ol>\n<li><code class="language-text">:link</code> 和 <code class="language-text">:visited</code> 成为链接伪类，只能应用于锚元素</li>\n<li><code class="language-text">:hover</code>、<code class="language-text">:active</code> 和 <code class="language-text">:focus</code> 称为动态伪类，理论上可应用于任何元素</li>\n</ol>\n<h2>通用选择器</h2>\n<div class="gatsby-highlight">\n      <pre class="language-text"><code class="language-text">* {\n  padding: 0;\n  margin: 0;\n}</code></pre>\n      </div>\n<h2>高级选择器</h2>\n<p>注意浏览器的兼容性</p>\n<h3>子选择器和相邻同胞选择器</h3>\n<h4>子选择器</h4>\n<div class="gatsby-highlight">\n      <pre class="language-text"><code class="language-text">/* 只对直接子元素起作用，而后代选择器是对所有后代起作用 */\n#nav&gt;li {\n  background: url(folder.png) no-repeat left top;\n  padding-left: 20px;\n}</code></pre>\n      </div>\n<div class="gatsby-highlight">\n      <pre class="language-text"><code class="language-text">/* 对于 IE6 以及更低版本，可实现同样效果 */\n#nav li {\n  /* style */\n}\n\n# nav li * {\n  /* style */\n}</code></pre>\n      </div>\n<h4>相邻同胞选择器</h4>\n<div class="gatsby-highlight">\n      <pre class="language-text"><code class="language-text">/* 作用于在 h2 后面与其相邻的 p 元素 */\nh2 + p {\n  font-size: 1.4em;\n  font-weight: bold;\n  color: #777;\n}</code></pre>\n      </div>\n<h3>属性选择器</h3>\n<p>根据属性是否存在应用样式</p>\n<div class="gatsby-highlight">\n      <pre class="language-text"><code class="language-text">&lt;!DOCTYPE html&gt;\n&lt;html&gt;\n  &lt;head&gt;\n    &lt;meta charset=&quot;utf-8&quot;&gt;\n    &lt;title&gt;属性选择器&lt;/title&gt;\n    &lt;style&gt;\n    acronym[title] {\n      border-bottom: 1px dotted #999;\n    }\n\n    acronym[title]:hover, acronym[title]:focus {\n      cursor: help;\n    }\n    &lt;/style&gt;\n  &lt;/head&gt;\n  &lt;body&gt;\n    &lt;p&gt;The term\n      &lt;acronym title=&quot;self-contained underwater breathing apparatus&quot;&gt;\n        SCUBA\n      &lt;/acronym&gt;\n       is an acronym rather than an abbreviation as it is pronounced as a word.\n     &lt;/p&gt;\n  &lt;/body&gt;\n&lt;/html&gt;</code></pre>\n      </div>\n<p>根据属性值显示样式</p>\n<div class="gatsby-highlight">\n      <pre class="language-text"><code class="language-text">a[rel=&quot;nofollow&quot;] {\n  /* style */\n}</code></pre>\n      </div>\n<p>根据属性值之一寻找元素</p>\n<div class="gatsby-highlight">\n      <pre class="language-text"><code class="language-text">.blogroll a[rel~=&quot;co-worker&quot;] {\n  /* style */\n}</code></pre>\n      </div>\n<h3>层叠和特殊性</h3>\n<h4>重要度排序</h4>\n<ol>\n<li><code class="language-text">!important</code> 用户样式</li>\n<li><code class="language-text">!important</code> 作者样式</li>\n<li>作者样式</li>\n<li>用户样式</li>\n<li>浏览器/用户代理应用的样式</li>\n</ol>\n<p>如果两个规则特殊性度相同，则后定义的规则优先</p>\n<h4>特殊性</h4>\n<p>选择器的特殊性分为4个成分等级：a、b、c 和 d</p>\n<ol>\n<li>如果是行内样式，a ＝ 1</li>\n<li>b 等于 ID 选择器总数</li>\n<li>c 等于类、伪类和属性选择器的数量</li>\n<li>d 等于类型选择器和伪元素选择器的个数</li>\n</ol>\n<table>\n<thead>\n<tr>\n<th>选择器</th>\n<th>特殊性</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>style=""</td>\n<td>1,0,0,0</td>\n</tr>\n<tr>\n<td>wrapper #content {}</td>\n<td>0,2,0,0</td>\n</tr>\n</tbody>\n</table>\n<p>一般的，<code class="language-text">style</code> 比其他规则特殊，具有 ID 选择器的规则比没有 ID 选择器的规则特殊，具有类选择器的比没有类选择器的特殊，如果两个规则特殊性相同，则后定义优先。</p>\n<h3>继承</h3>\n<p>直接应用于元素的任何样式总会覆盖继承而来的样式</p>\n<h2>规划、组织和维护样式表</h2>\n<h3>对文档应用样式表</h3>\n<p>两种方式</p>\n<div class="gatsby-highlight">\n      <pre class="language-text"><code class="language-text">&lt;link href=&quot;/css/basic.css&quot; rel=&quot;stylesheet&quot; type=&quot;text/css&quot; /&gt;\n&lt;style type=&quot;text/css&quot;&gt;\n&lt;!--\n@import url(&quot;/css/advanced.css&quot;);\n--&gt;\n&lt;/style&gt;</code></pre>\n      </div>\n<h3>注释</h3>\n<div class="gatsby-highlight">\n      <pre class="language-text"><code class="language-text">/* 这是注释 */</code></pre>\n      </div>\n<h3>寻找特定样式</h3>\n<p>添加标记，搜索时更方便（可以自己定义这个标志，作者在书中使用 <code class="language-text">@group</code>）</p>\n<div class="gatsby-highlight">\n      <pre class="language-text"><code class="language-text">/* @group typography */</code></pre>\n      </div>\n<h3>结构</h3>\n<h4>一般性样式</h4>\n<ul>\n<li>主体样式</li>\n<li>reset样式</li>\n<li>链接</li>\n<li>标题</li>\n<li>其他元素</li>\n</ul>\n<h4>辅助样式</h4>\n<ul>\n<li>表单</li>\n<li>通知和错误</li>\n<li>一致的条目</li>\n</ul>\n<h4>页面结构</h4>\n<ul>\n<li>标题、页脚和导航</li>\n<li>布局</li>\n<li>其他页面结构元素</li>\n</ul>\n<h4>页面组件</h4>\n<ul>\n<li>各个页面</li>\n</ul>\n<h4>覆盖</h4>\n<h3>自我提示</h3>\n<p>通过写一些有关键字的注释来提示自己，比如下面这样的</p>\n<div class="gatsby-highlight">\n      <pre class="language-text"><code class="language-text">/* Color Variables\n\n@colordef #434343; dark gray\n@colordef #369; light green\n*/\n\n/* @todo: Rember to do something... */\n/* @workaround: I managed to fix this problem in IE\nby setting a small negative margin but it&#39;s not pretty */\n/* @bugfix: Rule break */</code></pre>\n      </div>\n<h1>参考资料</h1>\n<ol>\n<li><a href="http://book.douban.com/subject/4736167/">《精通CSS·高级Web标准解决方案（第二版）》</a></li>\n</ol>',frontmatter:{title:"CSS 选择器学习笔记",date:"January 28, 2016",tags:["前端","学习笔记","开发","CSS"]},fields:{slug:"/css-selector/"}}},pathContext:{slug:"/css-selector/"}}}});
//# sourceMappingURL=path---posts-css-selector-d1bd43ce72fb8cf584ea.js.map