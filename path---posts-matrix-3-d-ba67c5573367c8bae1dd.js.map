{"version":3,"sources":["webpack:///path---posts-matrix-3-d-ba67c5573367c8bae1dd.js","webpack:///./.cache/json/posts-matrix-3-d.json"],"names":["webpackJsonp","488","module","exports","data","markdownRemark","html","frontmatter","title","date","tags","fields","slug","pathContext"],"mappings":"AAAAA,cAAc,iBAERC,IACA,SAAUC,EAAQC,GCHxBD,EAAAC,SAAkBC,MAAQC,gBAAkBC,KAAA,gwcAAy+bC,aAA2uBC,MAAA,WAAAC,KAAA,oBAAAC,MAAA,wCAA6FC,QAAWC,KAAA,gBAAsBC,aAAgBD,KAAA","file":"path---posts-matrix-3-d-ba67c5573367c8bae1dd.js","sourcesContent":["webpackJsonp([279955836971147],{\n\n/***/ 488:\n/***/ (function(module, exports) {\n\n\tmodule.exports = {\"data\":{\"markdownRemark\":{\"html\":\"<p>今天看到一篇文章, <a href=\\\"http://www.alloyteam.com/2016/12/and-transformjs-rock/\\\">和transformjs一起摇摆</a>, 顺便去看了一下源码, 源码不是很多,一百八十多行, 于是仔细阅读了一下, 变形的实现是通过 CSS 的 transform 属性完成的. 一个关键的方法是 <code class=\\\"language-text\\\">watch</code>, 代码如下:</p>\\n<div class=\\\"gatsby-highlight\\\">\\n      <pre class=\\\"language-javascript\\\"><code class=\\\"language-javascript\\\"><span class=\\\"token keyword\\\">function</span> <span class=\\\"token function\\\">watch</span><span class=\\\"token punctuation\\\">(</span>target<span class=\\\"token punctuation\\\">,</span> prop<span class=\\\"token punctuation\\\">,</span> callback<span class=\\\"token punctuation\\\">)</span> <span class=\\\"token punctuation\\\">{</span>\\n    Object<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">defineProperty</span><span class=\\\"token punctuation\\\">(</span>target<span class=\\\"token punctuation\\\">,</span> prop<span class=\\\"token punctuation\\\">,</span> <span class=\\\"token punctuation\\\">{</span>\\n        <span class=\\\"token keyword\\\">get</span><span class=\\\"token punctuation\\\">:</span> <span class=\\\"token keyword\\\">function</span> <span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token punctuation\\\">{</span>\\n            <span class=\\\"token keyword\\\">return</span> <span class=\\\"token keyword\\\">this</span><span class=\\\"token punctuation\\\">[</span><span class=\\\"token string\\\">\\\"_\\\"</span> <span class=\\\"token operator\\\">+</span> prop<span class=\\\"token punctuation\\\">]</span><span class=\\\"token punctuation\\\">;</span>\\n        <span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">,</span>\\n        <span class=\\\"token keyword\\\">set</span><span class=\\\"token punctuation\\\">:</span> <span class=\\\"token keyword\\\">function</span> <span class=\\\"token punctuation\\\">(</span>value<span class=\\\"token punctuation\\\">)</span> <span class=\\\"token punctuation\\\">{</span>\\n            <span class=\\\"token keyword\\\">if</span> <span class=\\\"token punctuation\\\">(</span>value <span class=\\\"token operator\\\">!==</span> <span class=\\\"token keyword\\\">this</span><span class=\\\"token punctuation\\\">[</span><span class=\\\"token string\\\">\\\"_\\\"</span> <span class=\\\"token operator\\\">+</span> prop<span class=\\\"token punctuation\\\">]</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token punctuation\\\">{</span>\\n                <span class=\\\"token keyword\\\">this</span><span class=\\\"token punctuation\\\">[</span><span class=\\\"token string\\\">\\\"_\\\"</span> <span class=\\\"token operator\\\">+</span> prop<span class=\\\"token punctuation\\\">]</span> <span class=\\\"token operator\\\">=</span> value<span class=\\\"token punctuation\\\">;</span>\\n                <span class=\\\"token function\\\">callback</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n            <span class=\\\"token punctuation\\\">}</span>\\n\\n        <span class=\\\"token punctuation\\\">}</span>\\n    <span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n<span class=\\\"token punctuation\\\">}</span></code></pre>\\n      </div>\\n<p>最终这个函数会 \\\"<code class=\\\"language-text\\\">watch</code>\\\" 如 <code class=\\\"language-text\\\">translateX</code>, <code class=\\\"language-text\\\">scaleX</code> 这些 transform 的值, 而 <code class=\\\"language-text\\\">callback</code> 则是一个修改 CSS 的 transform 的函数.</p>\\n<div class=\\\"gatsby-highlight\\\">\\n      <pre class=\\\"language-javascript\\\"><code class=\\\"language-javascript\\\"><span class=\\\"token keyword\\\">function</span> <span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token punctuation\\\">{</span>\\n  <span class=\\\"token keyword\\\">var</span> mtx <span class=\\\"token operator\\\">=</span> element<span class=\\\"token punctuation\\\">.</span>matrix3D<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">identity</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">appendTransform</span><span class=\\\"token punctuation\\\">(</span>element<span class=\\\"token punctuation\\\">.</span>translateX<span class=\\\"token punctuation\\\">,</span> element<span class=\\\"token punctuation\\\">.</span>translateY<span class=\\\"token punctuation\\\">,</span> element<span class=\\\"token punctuation\\\">.</span>translateZ<span class=\\\"token punctuation\\\">,</span> element<span class=\\\"token punctuation\\\">.</span>scaleX<span class=\\\"token punctuation\\\">,</span> element<span class=\\\"token punctuation\\\">.</span>scaleY<span class=\\\"token punctuation\\\">,</span> element<span class=\\\"token punctuation\\\">.</span>scaleZ<span class=\\\"token punctuation\\\">,</span> element<span class=\\\"token punctuation\\\">.</span>rotateX<span class=\\\"token punctuation\\\">,</span> element<span class=\\\"token punctuation\\\">.</span>rotateY<span class=\\\"token punctuation\\\">,</span> element<span class=\\\"token punctuation\\\">.</span>rotateZ<span class=\\\"token punctuation\\\">,</span> element<span class=\\\"token punctuation\\\">.</span>skewX<span class=\\\"token punctuation\\\">,</span> element<span class=\\\"token punctuation\\\">.</span>skewY<span class=\\\"token punctuation\\\">,</span> element<span class=\\\"token punctuation\\\">.</span>originX<span class=\\\"token punctuation\\\">,</span> element<span class=\\\"token punctuation\\\">.</span>originY<span class=\\\"token punctuation\\\">,</span> element<span class=\\\"token punctuation\\\">.</span>originZ<span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n  element<span class=\\\"token punctuation\\\">.</span>style<span class=\\\"token punctuation\\\">.</span>transform <span class=\\\"token operator\\\">=</span> element<span class=\\\"token punctuation\\\">.</span>style<span class=\\\"token punctuation\\\">.</span>msTransform <span class=\\\"token operator\\\">=</span> element<span class=\\\"token punctuation\\\">.</span>style<span class=\\\"token punctuation\\\">.</span>OTransform <span class=\\\"token operator\\\">=</span> element<span class=\\\"token punctuation\\\">.</span>style<span class=\\\"token punctuation\\\">.</span>MozTransform <span class=\\\"token operator\\\">=</span> element<span class=\\\"token punctuation\\\">.</span>style<span class=\\\"token punctuation\\\">.</span>webkitTransform <span class=\\\"token operator\\\">=</span> <span class=\\\"token punctuation\\\">(</span>notPerspective <span class=\\\"token operator\\\">?</span> <span class=\\\"token string\\\">\\\"\\\"</span> <span class=\\\"token punctuation\\\">:</span> <span class=\\\"token string\\\">\\\"perspective(\\\"</span> <span class=\\\"token operator\\\">+</span> <span class=\\\"token punctuation\\\">(</span>element<span class=\\\"token punctuation\\\">.</span>perspective <span class=\\\"token operator\\\">===</span> undefined <span class=\\\"token operator\\\">?</span> <span class=\\\"token number\\\">500</span> <span class=\\\"token punctuation\\\">:</span> element<span class=\\\"token punctuation\\\">.</span>perspective<span class=\\\"token punctuation\\\">)</span> <span class=\\\"token operator\\\">+</span> <span class=\\\"token string\\\">\\\"px) \\\"</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token operator\\\">+</span> <span class=\\\"token string\\\">\\\"matrix3d(\\\"</span> <span class=\\\"token operator\\\">+</span> Array<span class=\\\"token punctuation\\\">.</span>prototype<span class=\\\"token punctuation\\\">.</span>slice<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">call</span><span class=\\\"token punctuation\\\">(</span>mtx<span class=\\\"token punctuation\\\">.</span>elements<span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">join</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token string\\\">\\\",\\\"</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token operator\\\">+</span> <span class=\\\"token string\\\">\\\")\\\"</span><span class=\\\"token punctuation\\\">;</span>\\n<span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span></code></pre>\\n      </div>\\n<p>代码十分清晰, 详情可以点击<a href=\\\"https://github.com/AlloyTeam/AlloyTouch/blob/master/transformjs/transform.js\\\">这里</a>阅读.</p>\\n<p>这篇文章主要也不是分析源码, 而是 <code class=\\\"language-text\\\">matrix3d</code>, 这个小工具就是通过设置 <code class=\\\"language-text\\\">matrix3d</code> 实现的, 之前对 <code class=\\\"language-text\\\">matrix3d</code> 并没有多少了解, 趁此学习一下.</p>\\n<!-- more -->\\n<h2>语法</h2>\\n<div class=\\\"gatsby-highlight\\\">\\n      <pre class=\\\"language-text\\\"><code class=\\\"language-text\\\">transform: matrix3d(a1,  b1,  c1,  d1,  a2,  b2,  c2,  d2,  a3,  b3,  c3,  d3,  a4,  b4,  c4,  d4);</code></pre>\\n      </div>\\n<h2>意义</h2>\\n<p>CSS 所代表的矩阵如下所示:\\n$$\\n\\\\begin{bmatrix}\\na1 &#x26; a2 &#x26; a3 &#x26; a4 \\\\<br>\\nb1 &#x26; b2 &#x26; b3 &#x26; b4 \\\\<br>\\nc1 &#x26; c2 &#x26; c3 &#x26; c4 \\\\<br>\\nd1 &#x26; d2 &#x26; d3 &#x26; d4\\n\\\\end{bmatrix}\\n$$</p>\\n<p>一般来说,  d1,  d2,  d3,  d4 的取值分别为 0,  0,  0,  1.</p>\\n<p>这个矩阵会和原来元素的 x, y, z 进行矩阵乘法, 从而得到新的坐标, 实现了变换</p>\\n<p>$$\\n\\\\begin{bmatrix}\\na<em>1 &#x26; a</em>2 &#x26; a<em>3 &#x26; a</em>4 \\\\<br>\\nb<em>1 &#x26; b</em>2 &#x26; b<em>3 &#x26; b</em>4 \\\\<br>\\nc<em>1 &#x26; c</em>2 &#x26; c<em>3 &#x26; c</em>4 \\\\<br>\\n0 &#x26; 0 &#x26; 0 &#x26; 1\\n\\\\end{bmatrix}\\n\\\\cdot\\n\\\\begin{bmatrix}\\nx \\\\<br>\\ny \\\\<br>\\nz \\\\<br>\\n1\\n\\\\end{bmatrix}\\n=\\n\\\\begin{bmatrix}\\na<em>1x + a</em>2y + a<em>3z + a</em>4 \\\\<br>\\nb<em>1x + b</em>2y + b<em>3z + b</em>4 \\\\<br>\\nc<em>1x + c</em>2y + c<em>3 z + c</em>4 \\\\<br>\\n0 + 0 + 0 + 1\\n\\\\end{bmatrix}\\n$$</p>\\n<p>这就是 <code class=\\\"language-text\\\">matrix3d</code> 做的事情了.</p>\\n<p>而 <code class=\\\"language-text\\\">rotateX</code>,  <code class=\\\"language-text\\\">rotateY</code>,  <code class=\\\"language-text\\\">scaleX</code> 等等便捷的变形方法本质上就是一个特殊的 <code class=\\\"language-text\\\">matrix3d</code>, 让我们看看这些值得 <code class=\\\"language-text\\\">matrix3d</code> 是什么样的.</p>\\n<p><strong>rotateX(a):</strong></p>\\n<p>$$\\n\\\\begin{bmatrix}\\n1 &#x26; 0 &#x26; 0 &#x26; 0 \\\\<br>\\n0 &#x26; cos(a) &#x26; -sin(a) &#x26; 0 \\\\<br>\\n0 &#x26; sin(a) &#x26; cos(a) &#x26; 0 \\\\<br>\\n0 &#x26; 0 &#x26; 0 &#x26; 1\\n\\\\end{bmatrix}\\n$$</p>\\n<p><strong>rotateY(a):</strong></p>\\n<p>$$\\n\\\\begin{bmatrix}\\ncos(a) &#x26; 0 &#x26; sin(a) &#x26; 0 \\\\<br>\\n0 &#x26; 1 &#x26; 0 &#x26; 0 \\\\<br>\\n-sin(a) &#x26; 0 &#x26; cos(a) &#x26; 0 \\\\<br>\\n0 &#x26; 0 &#x26; 0 &#x26; 1\\n\\\\end{bmatrix}\\n$$</p>\\n<p><strong>rotateZ(a):</strong></p>\\n<p>$$\\n\\\\begin{bmatrix}\\ncos(a) &#x26; -sin(a) &#x26; 0 &#x26; 0 \\\\<br>\\nsin(a) &#x26; cos(a) &#x26; 0 &#x26; 0 \\\\<br>\\n0 &#x26; 0 &#x26; 1 &#x26; 0 \\\\<br>\\n0 &#x26; 0 &#x26; 0 &#x26; 1\\n\\\\end{bmatrix}\\n$$</p>\\n<p><strong>translateX(t):</strong></p>\\n<p>$$\\n\\\\begin{bmatrix}\\n1 &#x26; 0 &#x26; 0 &#x26; t \\\\<br>\\n0 &#x26; 1 &#x26; 0 &#x26; 0 \\\\<br>\\n0 &#x26; 0 &#x26; 1 &#x26; 0 \\\\<br>\\n0 &#x26; 0 &#x26; 0 &#x26; 1\\n\\\\end{bmatrix}\\n$$</p>\\n<p><strong>translateY(t):</strong></p>\\n<p>$$\\n\\\\begin{bmatrix}\\n1 &#x26; 0 &#x26; 0 &#x26; 0 \\\\<br>\\n0 &#x26; 1 &#x26; 0 &#x26; t \\\\<br>\\n0 &#x26; 0 &#x26; 1 &#x26; 0 \\\\<br>\\n0 &#x26; 0 &#x26; 0 &#x26; 1\\n\\\\end{bmatrix}\\n$$</p>\\n<p><strong>translateZ(t):</strong></p>\\n<p>$$\\n\\\\begin{bmatrix}\\n1 &#x26; 0 &#x26; 0 &#x26; 0 \\\\<br>\\n0 &#x26; 1 &#x26; 0 &#x26; 0 \\\\<br>\\n0 &#x26; 0 &#x26; 1 &#x26; t \\\\<br>\\n0 &#x26; 0 &#x26; 0 &#x26; 1\\n\\\\end{bmatrix}\\n$$</p>\\n<p><strong>skewX(ax):</strong></p>\\n<p>$$\\n\\\\begin{bmatrix}\\n1 &#x26; tan(ay) &#x26; 0 &#x26; 0 \\\\<br>\\n0 &#x26; 1 &#x26; 0 &#x26; 0 \\\\<br>\\n0 &#x26; 0 &#x26; 1 &#x26; 0 \\\\<br>\\n0 &#x26; 0 &#x26; 0 &#x26; 1\\n\\\\end{bmatrix}\\n$$</p>\\n<p><strong>skewX(ay):</strong></p>\\n<p>$$\\n\\\\begin{bmatrix}\\n1 &#x26; 0 &#x26; 0 &#x26; 0 \\\\<br>\\ntan(a_x) &#x26; 1 &#x26; 0 &#x26; 0 \\\\<br>\\n0 &#x26; 0 &#x26; 1 &#x26; 0 \\\\<br>\\n0 &#x26; 0 &#x26; 0 &#x26; 1\\n\\\\end{bmatrix}\\n$$</p>\\n<p><strong>skewX(az):</strong></p>\\n<p>$$\\n\\\\begin{bmatrix}\\n1 &#x26; tan(a_y) &#x26; 0 &#x26; 0 \\\\<br>\\n0 &#x26; 1 &#x26; 0 &#x26; 0 \\\\<br>\\n0 &#x26; 0 &#x26; 1 &#x26; 0 \\\\<br>\\n0 &#x26; 0 &#x26; 0 &#x26; 1\\n\\\\end{bmatrix}\\n$$</p>\\n<p><strong>变换中心改变：</strong></p>\\n<p>设新的中心点为 $x<em>0$, $y</em>0$, $z<em>0$.\\n$$\\n\\\\begin{bmatrix}\\na</em>1 &#x26; a<em>2 &#x26; a</em>3 &#x26; a<em>4 \\\\<br>\\nb</em>1 &#x26; b<em>2 &#x26; b</em>3 &#x26; b<em>4 \\\\<br>\\nc</em>1 &#x26; c<em>2 &#x26; c</em>3 &#x26; c<em>4 \\\\<br>\\n0 &#x26; 0 &#x26; 0 &#x26; 1\\n\\\\end{bmatrix}\\n\\\\cdot\\n\\\\begin{bmatrix}\\nx</em>0 \\\\<br>\\ny<em>0 \\\\<br>\\nz</em>0 \\\\<br>\\n0\\n\\\\end{bmatrix}\\n=\\n\\\\begin{bmatrix}\\na<em>1x</em>0 + a<em>2y</em>0 + a<em>3z</em>0  \\\\<br>\\nb<em>1x</em>0 + b<em>2y</em>0 + b<em>3z</em>0 \\\\<br>\\nc<em>1x</em>0 + c<em>2y</em>0 + c<em>3 z</em>0 \\\\<br>\\n0\\n\\\\end{bmatrix}\\n$$\\n然后用原来矩阵的最后一列减去这个向量.</p>\\n<p>$$\\n\\\\begin{bmatrix}\\na<em>1 &#x26; a</em>2 &#x26; a<em>3 &#x26; a</em>4 - a<em>1x</em>0 - a<em>2y</em>0 - a<em>3z</em>0 \\\\<br>\\nb<em>1 &#x26; b</em>2 &#x26; b<em>3 &#x26; b</em>4 - b<em>1x</em>0 - b<em>2y</em>0 - b<em>3z</em>0 \\\\<br>\\nc<em>1 &#x26; c</em>2 &#x26; c<em>3 &#x26; c</em>4 - c<em>1x</em>0 - c<em>2y</em>0 - c<em>3z</em>0 \\\\<br>\\n0 &#x26; 0 &#x26; 0 &#x26; 1\\n\\\\end{bmatrix}\\n$$</p>\\n<p>这些矩阵也就是 transformjs 所用到的, 大家可以阅读源码看到这些矩阵.</p>\\n<p>另外, 还有一个 <code class=\\\"language-text\\\">perspective</code>, 其意义是透视, 视角. 在显示器中3D效果元素的透视点在显示器前方(近似于我们眼睛所在方位).</p>\\n<p><code class=\\\"language-text\\\">perspective</code> 属性有两种书写形式, 用在元素的父级或元素本身.</p>\\n<div class=\\\"gatsby-highlight\\\">\\n      <pre class=\\\"language-css\\\"><code class=\\\"language-css\\\"><span class=\\\"token selector\\\">.parent</span> <span class=\\\"token punctuation\\\">{</span>\\n    <span class=\\\"token property\\\">perspective</span><span class=\\\"token punctuation\\\">:</span> 1000px<span class=\\\"token punctuation\\\">;</span>\\n<span class=\\\"token punctuation\\\">}</span></code></pre>\\n      </div>\\n<div class=\\\"gatsby-highlight\\\">\\n      <pre class=\\\"language-css\\\"><code class=\\\"language-css\\\"><span class=\\\"token selector\\\">#parent .ele</span> <span class=\\\"token punctuation\\\">{</span>\\n    <span class=\\\"token property\\\">transform</span><span class=\\\"token punctuation\\\">:</span> <span class=\\\"token function\\\">perspective</span><span class=\\\"token punctuation\\\">(</span>1000px<span class=\\\"token punctuation\\\">)</span> <span class=\\\"token function\\\">rotateY</span><span class=\\\"token punctuation\\\">(</span>45deg<span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n<span class=\\\"token punctuation\\\">}</span></code></pre>\\n      </div>\\n<p>他们之间的区别可以通过阅读<a href=\\\"http://www.zhangxinxu.com/wordpress/2012/09/css3-3d-transform-perspective-animate-transition/\\\">好吧，CSS3 3D transform变换，不过如此！</a>来区分.</p>\\n<h2>深入阅读</h2>\\n<ol>\\n<li><a href=\\\"http://www.alloyteam.com/2016/12/and-transformjs-rock/\\\">和transformjs一起摇摆</a></li>\\n<li><a href=\\\"https://github.com/AlloyTeam/AlloyTouch/blob/master/transformjs/transform.js\\\">transform.js</a></li>\\n<li><a href=\\\"http://www.zhangxinxu.com/wordpress/2012/06/css3-transform-matrix-%E7%9F%A9%E9%98%B5/\\\">理解CSS3 transform中的Matrix(矩阵)</a></li>\\n<li><a href=\\\"http://www.zhangxinxu.com/wordpress/2012/09/css3-3d-transform-perspective-animate-transition/\\\">好吧，CSS3 3D transform变换，不过如此！</a></li>\\n</ol>\",\"frontmatter\":{\"title\":\"matrix3d\",\"date\":\"December 07, 2016\",\"tags\":[\"CSS\",\"JavaScript\",\"学习笔记\",\"transform\"]},\"fields\":{\"slug\":\"/matrix3d/\"}}},\"pathContext\":{\"slug\":\"/matrix3d/\"}}\n\n/***/ })\n\n});\n\n\n// WEBPACK FOOTER //\n// path---posts-matrix-3-d-ba67c5573367c8bae1dd.js","module.exports = {\"data\":{\"markdownRemark\":{\"html\":\"<p>今天看到一篇文章, <a href=\\\"http://www.alloyteam.com/2016/12/and-transformjs-rock/\\\">和transformjs一起摇摆</a>, 顺便去看了一下源码, 源码不是很多,一百八十多行, 于是仔细阅读了一下, 变形的实现是通过 CSS 的 transform 属性完成的. 一个关键的方法是 <code class=\\\"language-text\\\">watch</code>, 代码如下:</p>\\n<div class=\\\"gatsby-highlight\\\">\\n      <pre class=\\\"language-javascript\\\"><code class=\\\"language-javascript\\\"><span class=\\\"token keyword\\\">function</span> <span class=\\\"token function\\\">watch</span><span class=\\\"token punctuation\\\">(</span>target<span class=\\\"token punctuation\\\">,</span> prop<span class=\\\"token punctuation\\\">,</span> callback<span class=\\\"token punctuation\\\">)</span> <span class=\\\"token punctuation\\\">{</span>\\n    Object<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">defineProperty</span><span class=\\\"token punctuation\\\">(</span>target<span class=\\\"token punctuation\\\">,</span> prop<span class=\\\"token punctuation\\\">,</span> <span class=\\\"token punctuation\\\">{</span>\\n        <span class=\\\"token keyword\\\">get</span><span class=\\\"token punctuation\\\">:</span> <span class=\\\"token keyword\\\">function</span> <span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token punctuation\\\">{</span>\\n            <span class=\\\"token keyword\\\">return</span> <span class=\\\"token keyword\\\">this</span><span class=\\\"token punctuation\\\">[</span><span class=\\\"token string\\\">\\\"_\\\"</span> <span class=\\\"token operator\\\">+</span> prop<span class=\\\"token punctuation\\\">]</span><span class=\\\"token punctuation\\\">;</span>\\n        <span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">,</span>\\n        <span class=\\\"token keyword\\\">set</span><span class=\\\"token punctuation\\\">:</span> <span class=\\\"token keyword\\\">function</span> <span class=\\\"token punctuation\\\">(</span>value<span class=\\\"token punctuation\\\">)</span> <span class=\\\"token punctuation\\\">{</span>\\n            <span class=\\\"token keyword\\\">if</span> <span class=\\\"token punctuation\\\">(</span>value <span class=\\\"token operator\\\">!==</span> <span class=\\\"token keyword\\\">this</span><span class=\\\"token punctuation\\\">[</span><span class=\\\"token string\\\">\\\"_\\\"</span> <span class=\\\"token operator\\\">+</span> prop<span class=\\\"token punctuation\\\">]</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token punctuation\\\">{</span>\\n                <span class=\\\"token keyword\\\">this</span><span class=\\\"token punctuation\\\">[</span><span class=\\\"token string\\\">\\\"_\\\"</span> <span class=\\\"token operator\\\">+</span> prop<span class=\\\"token punctuation\\\">]</span> <span class=\\\"token operator\\\">=</span> value<span class=\\\"token punctuation\\\">;</span>\\n                <span class=\\\"token function\\\">callback</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n            <span class=\\\"token punctuation\\\">}</span>\\n\\n        <span class=\\\"token punctuation\\\">}</span>\\n    <span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n<span class=\\\"token punctuation\\\">}</span></code></pre>\\n      </div>\\n<p>最终这个函数会 \\\"<code class=\\\"language-text\\\">watch</code>\\\" 如 <code class=\\\"language-text\\\">translateX</code>, <code class=\\\"language-text\\\">scaleX</code> 这些 transform 的值, 而 <code class=\\\"language-text\\\">callback</code> 则是一个修改 CSS 的 transform 的函数.</p>\\n<div class=\\\"gatsby-highlight\\\">\\n      <pre class=\\\"language-javascript\\\"><code class=\\\"language-javascript\\\"><span class=\\\"token keyword\\\">function</span> <span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token punctuation\\\">{</span>\\n  <span class=\\\"token keyword\\\">var</span> mtx <span class=\\\"token operator\\\">=</span> element<span class=\\\"token punctuation\\\">.</span>matrix3D<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">identity</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">appendTransform</span><span class=\\\"token punctuation\\\">(</span>element<span class=\\\"token punctuation\\\">.</span>translateX<span class=\\\"token punctuation\\\">,</span> element<span class=\\\"token punctuation\\\">.</span>translateY<span class=\\\"token punctuation\\\">,</span> element<span class=\\\"token punctuation\\\">.</span>translateZ<span class=\\\"token punctuation\\\">,</span> element<span class=\\\"token punctuation\\\">.</span>scaleX<span class=\\\"token punctuation\\\">,</span> element<span class=\\\"token punctuation\\\">.</span>scaleY<span class=\\\"token punctuation\\\">,</span> element<span class=\\\"token punctuation\\\">.</span>scaleZ<span class=\\\"token punctuation\\\">,</span> element<span class=\\\"token punctuation\\\">.</span>rotateX<span class=\\\"token punctuation\\\">,</span> element<span class=\\\"token punctuation\\\">.</span>rotateY<span class=\\\"token punctuation\\\">,</span> element<span class=\\\"token punctuation\\\">.</span>rotateZ<span class=\\\"token punctuation\\\">,</span> element<span class=\\\"token punctuation\\\">.</span>skewX<span class=\\\"token punctuation\\\">,</span> element<span class=\\\"token punctuation\\\">.</span>skewY<span class=\\\"token punctuation\\\">,</span> element<span class=\\\"token punctuation\\\">.</span>originX<span class=\\\"token punctuation\\\">,</span> element<span class=\\\"token punctuation\\\">.</span>originY<span class=\\\"token punctuation\\\">,</span> element<span class=\\\"token punctuation\\\">.</span>originZ<span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n  element<span class=\\\"token punctuation\\\">.</span>style<span class=\\\"token punctuation\\\">.</span>transform <span class=\\\"token operator\\\">=</span> element<span class=\\\"token punctuation\\\">.</span>style<span class=\\\"token punctuation\\\">.</span>msTransform <span class=\\\"token operator\\\">=</span> element<span class=\\\"token punctuation\\\">.</span>style<span class=\\\"token punctuation\\\">.</span>OTransform <span class=\\\"token operator\\\">=</span> element<span class=\\\"token punctuation\\\">.</span>style<span class=\\\"token punctuation\\\">.</span>MozTransform <span class=\\\"token operator\\\">=</span> element<span class=\\\"token punctuation\\\">.</span>style<span class=\\\"token punctuation\\\">.</span>webkitTransform <span class=\\\"token operator\\\">=</span> <span class=\\\"token punctuation\\\">(</span>notPerspective <span class=\\\"token operator\\\">?</span> <span class=\\\"token string\\\">\\\"\\\"</span> <span class=\\\"token punctuation\\\">:</span> <span class=\\\"token string\\\">\\\"perspective(\\\"</span> <span class=\\\"token operator\\\">+</span> <span class=\\\"token punctuation\\\">(</span>element<span class=\\\"token punctuation\\\">.</span>perspective <span class=\\\"token operator\\\">===</span> undefined <span class=\\\"token operator\\\">?</span> <span class=\\\"token number\\\">500</span> <span class=\\\"token punctuation\\\">:</span> element<span class=\\\"token punctuation\\\">.</span>perspective<span class=\\\"token punctuation\\\">)</span> <span class=\\\"token operator\\\">+</span> <span class=\\\"token string\\\">\\\"px) \\\"</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token operator\\\">+</span> <span class=\\\"token string\\\">\\\"matrix3d(\\\"</span> <span class=\\\"token operator\\\">+</span> Array<span class=\\\"token punctuation\\\">.</span>prototype<span class=\\\"token punctuation\\\">.</span>slice<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">call</span><span class=\\\"token punctuation\\\">(</span>mtx<span class=\\\"token punctuation\\\">.</span>elements<span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">join</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token string\\\">\\\",\\\"</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token operator\\\">+</span> <span class=\\\"token string\\\">\\\")\\\"</span><span class=\\\"token punctuation\\\">;</span>\\n<span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span></code></pre>\\n      </div>\\n<p>代码十分清晰, 详情可以点击<a href=\\\"https://github.com/AlloyTeam/AlloyTouch/blob/master/transformjs/transform.js\\\">这里</a>阅读.</p>\\n<p>这篇文章主要也不是分析源码, 而是 <code class=\\\"language-text\\\">matrix3d</code>, 这个小工具就是通过设置 <code class=\\\"language-text\\\">matrix3d</code> 实现的, 之前对 <code class=\\\"language-text\\\">matrix3d</code> 并没有多少了解, 趁此学习一下.</p>\\n<!-- more -->\\n<h2>语法</h2>\\n<div class=\\\"gatsby-highlight\\\">\\n      <pre class=\\\"language-text\\\"><code class=\\\"language-text\\\">transform: matrix3d(a1,  b1,  c1,  d1,  a2,  b2,  c2,  d2,  a3,  b3,  c3,  d3,  a4,  b4,  c4,  d4);</code></pre>\\n      </div>\\n<h2>意义</h2>\\n<p>CSS 所代表的矩阵如下所示:\\n$$\\n\\\\begin{bmatrix}\\na1 &#x26; a2 &#x26; a3 &#x26; a4 \\\\<br>\\nb1 &#x26; b2 &#x26; b3 &#x26; b4 \\\\<br>\\nc1 &#x26; c2 &#x26; c3 &#x26; c4 \\\\<br>\\nd1 &#x26; d2 &#x26; d3 &#x26; d4\\n\\\\end{bmatrix}\\n$$</p>\\n<p>一般来说,  d1,  d2,  d3,  d4 的取值分别为 0,  0,  0,  1.</p>\\n<p>这个矩阵会和原来元素的 x, y, z 进行矩阵乘法, 从而得到新的坐标, 实现了变换</p>\\n<p>$$\\n\\\\begin{bmatrix}\\na<em>1 &#x26; a</em>2 &#x26; a<em>3 &#x26; a</em>4 \\\\<br>\\nb<em>1 &#x26; b</em>2 &#x26; b<em>3 &#x26; b</em>4 \\\\<br>\\nc<em>1 &#x26; c</em>2 &#x26; c<em>3 &#x26; c</em>4 \\\\<br>\\n0 &#x26; 0 &#x26; 0 &#x26; 1\\n\\\\end{bmatrix}\\n\\\\cdot\\n\\\\begin{bmatrix}\\nx \\\\<br>\\ny \\\\<br>\\nz \\\\<br>\\n1\\n\\\\end{bmatrix}\\n=\\n\\\\begin{bmatrix}\\na<em>1x + a</em>2y + a<em>3z + a</em>4 \\\\<br>\\nb<em>1x + b</em>2y + b<em>3z + b</em>4 \\\\<br>\\nc<em>1x + c</em>2y + c<em>3 z + c</em>4 \\\\<br>\\n0 + 0 + 0 + 1\\n\\\\end{bmatrix}\\n$$</p>\\n<p>这就是 <code class=\\\"language-text\\\">matrix3d</code> 做的事情了.</p>\\n<p>而 <code class=\\\"language-text\\\">rotateX</code>,  <code class=\\\"language-text\\\">rotateY</code>,  <code class=\\\"language-text\\\">scaleX</code> 等等便捷的变形方法本质上就是一个特殊的 <code class=\\\"language-text\\\">matrix3d</code>, 让我们看看这些值得 <code class=\\\"language-text\\\">matrix3d</code> 是什么样的.</p>\\n<p><strong>rotateX(a):</strong></p>\\n<p>$$\\n\\\\begin{bmatrix}\\n1 &#x26; 0 &#x26; 0 &#x26; 0 \\\\<br>\\n0 &#x26; cos(a) &#x26; -sin(a) &#x26; 0 \\\\<br>\\n0 &#x26; sin(a) &#x26; cos(a) &#x26; 0 \\\\<br>\\n0 &#x26; 0 &#x26; 0 &#x26; 1\\n\\\\end{bmatrix}\\n$$</p>\\n<p><strong>rotateY(a):</strong></p>\\n<p>$$\\n\\\\begin{bmatrix}\\ncos(a) &#x26; 0 &#x26; sin(a) &#x26; 0 \\\\<br>\\n0 &#x26; 1 &#x26; 0 &#x26; 0 \\\\<br>\\n-sin(a) &#x26; 0 &#x26; cos(a) &#x26; 0 \\\\<br>\\n0 &#x26; 0 &#x26; 0 &#x26; 1\\n\\\\end{bmatrix}\\n$$</p>\\n<p><strong>rotateZ(a):</strong></p>\\n<p>$$\\n\\\\begin{bmatrix}\\ncos(a) &#x26; -sin(a) &#x26; 0 &#x26; 0 \\\\<br>\\nsin(a) &#x26; cos(a) &#x26; 0 &#x26; 0 \\\\<br>\\n0 &#x26; 0 &#x26; 1 &#x26; 0 \\\\<br>\\n0 &#x26; 0 &#x26; 0 &#x26; 1\\n\\\\end{bmatrix}\\n$$</p>\\n<p><strong>translateX(t):</strong></p>\\n<p>$$\\n\\\\begin{bmatrix}\\n1 &#x26; 0 &#x26; 0 &#x26; t \\\\<br>\\n0 &#x26; 1 &#x26; 0 &#x26; 0 \\\\<br>\\n0 &#x26; 0 &#x26; 1 &#x26; 0 \\\\<br>\\n0 &#x26; 0 &#x26; 0 &#x26; 1\\n\\\\end{bmatrix}\\n$$</p>\\n<p><strong>translateY(t):</strong></p>\\n<p>$$\\n\\\\begin{bmatrix}\\n1 &#x26; 0 &#x26; 0 &#x26; 0 \\\\<br>\\n0 &#x26; 1 &#x26; 0 &#x26; t \\\\<br>\\n0 &#x26; 0 &#x26; 1 &#x26; 0 \\\\<br>\\n0 &#x26; 0 &#x26; 0 &#x26; 1\\n\\\\end{bmatrix}\\n$$</p>\\n<p><strong>translateZ(t):</strong></p>\\n<p>$$\\n\\\\begin{bmatrix}\\n1 &#x26; 0 &#x26; 0 &#x26; 0 \\\\<br>\\n0 &#x26; 1 &#x26; 0 &#x26; 0 \\\\<br>\\n0 &#x26; 0 &#x26; 1 &#x26; t \\\\<br>\\n0 &#x26; 0 &#x26; 0 &#x26; 1\\n\\\\end{bmatrix}\\n$$</p>\\n<p><strong>skewX(ax):</strong></p>\\n<p>$$\\n\\\\begin{bmatrix}\\n1 &#x26; tan(ay) &#x26; 0 &#x26; 0 \\\\<br>\\n0 &#x26; 1 &#x26; 0 &#x26; 0 \\\\<br>\\n0 &#x26; 0 &#x26; 1 &#x26; 0 \\\\<br>\\n0 &#x26; 0 &#x26; 0 &#x26; 1\\n\\\\end{bmatrix}\\n$$</p>\\n<p><strong>skewX(ay):</strong></p>\\n<p>$$\\n\\\\begin{bmatrix}\\n1 &#x26; 0 &#x26; 0 &#x26; 0 \\\\<br>\\ntan(a_x) &#x26; 1 &#x26; 0 &#x26; 0 \\\\<br>\\n0 &#x26; 0 &#x26; 1 &#x26; 0 \\\\<br>\\n0 &#x26; 0 &#x26; 0 &#x26; 1\\n\\\\end{bmatrix}\\n$$</p>\\n<p><strong>skewX(az):</strong></p>\\n<p>$$\\n\\\\begin{bmatrix}\\n1 &#x26; tan(a_y) &#x26; 0 &#x26; 0 \\\\<br>\\n0 &#x26; 1 &#x26; 0 &#x26; 0 \\\\<br>\\n0 &#x26; 0 &#x26; 1 &#x26; 0 \\\\<br>\\n0 &#x26; 0 &#x26; 0 &#x26; 1\\n\\\\end{bmatrix}\\n$$</p>\\n<p><strong>变换中心改变：</strong></p>\\n<p>设新的中心点为 $x<em>0$, $y</em>0$, $z<em>0$.\\n$$\\n\\\\begin{bmatrix}\\na</em>1 &#x26; a<em>2 &#x26; a</em>3 &#x26; a<em>4 \\\\<br>\\nb</em>1 &#x26; b<em>2 &#x26; b</em>3 &#x26; b<em>4 \\\\<br>\\nc</em>1 &#x26; c<em>2 &#x26; c</em>3 &#x26; c<em>4 \\\\<br>\\n0 &#x26; 0 &#x26; 0 &#x26; 1\\n\\\\end{bmatrix}\\n\\\\cdot\\n\\\\begin{bmatrix}\\nx</em>0 \\\\<br>\\ny<em>0 \\\\<br>\\nz</em>0 \\\\<br>\\n0\\n\\\\end{bmatrix}\\n=\\n\\\\begin{bmatrix}\\na<em>1x</em>0 + a<em>2y</em>0 + a<em>3z</em>0  \\\\<br>\\nb<em>1x</em>0 + b<em>2y</em>0 + b<em>3z</em>0 \\\\<br>\\nc<em>1x</em>0 + c<em>2y</em>0 + c<em>3 z</em>0 \\\\<br>\\n0\\n\\\\end{bmatrix}\\n$$\\n然后用原来矩阵的最后一列减去这个向量.</p>\\n<p>$$\\n\\\\begin{bmatrix}\\na<em>1 &#x26; a</em>2 &#x26; a<em>3 &#x26; a</em>4 - a<em>1x</em>0 - a<em>2y</em>0 - a<em>3z</em>0 \\\\<br>\\nb<em>1 &#x26; b</em>2 &#x26; b<em>3 &#x26; b</em>4 - b<em>1x</em>0 - b<em>2y</em>0 - b<em>3z</em>0 \\\\<br>\\nc<em>1 &#x26; c</em>2 &#x26; c<em>3 &#x26; c</em>4 - c<em>1x</em>0 - c<em>2y</em>0 - c<em>3z</em>0 \\\\<br>\\n0 &#x26; 0 &#x26; 0 &#x26; 1\\n\\\\end{bmatrix}\\n$$</p>\\n<p>这些矩阵也就是 transformjs 所用到的, 大家可以阅读源码看到这些矩阵.</p>\\n<p>另外, 还有一个 <code class=\\\"language-text\\\">perspective</code>, 其意义是透视, 视角. 在显示器中3D效果元素的透视点在显示器前方(近似于我们眼睛所在方位).</p>\\n<p><code class=\\\"language-text\\\">perspective</code> 属性有两种书写形式, 用在元素的父级或元素本身.</p>\\n<div class=\\\"gatsby-highlight\\\">\\n      <pre class=\\\"language-css\\\"><code class=\\\"language-css\\\"><span class=\\\"token selector\\\">.parent</span> <span class=\\\"token punctuation\\\">{</span>\\n    <span class=\\\"token property\\\">perspective</span><span class=\\\"token punctuation\\\">:</span> 1000px<span class=\\\"token punctuation\\\">;</span>\\n<span class=\\\"token punctuation\\\">}</span></code></pre>\\n      </div>\\n<div class=\\\"gatsby-highlight\\\">\\n      <pre class=\\\"language-css\\\"><code class=\\\"language-css\\\"><span class=\\\"token selector\\\">#parent .ele</span> <span class=\\\"token punctuation\\\">{</span>\\n    <span class=\\\"token property\\\">transform</span><span class=\\\"token punctuation\\\">:</span> <span class=\\\"token function\\\">perspective</span><span class=\\\"token punctuation\\\">(</span>1000px<span class=\\\"token punctuation\\\">)</span> <span class=\\\"token function\\\">rotateY</span><span class=\\\"token punctuation\\\">(</span>45deg<span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n<span class=\\\"token punctuation\\\">}</span></code></pre>\\n      </div>\\n<p>他们之间的区别可以通过阅读<a href=\\\"http://www.zhangxinxu.com/wordpress/2012/09/css3-3d-transform-perspective-animate-transition/\\\">好吧，CSS3 3D transform变换，不过如此！</a>来区分.</p>\\n<h2>深入阅读</h2>\\n<ol>\\n<li><a href=\\\"http://www.alloyteam.com/2016/12/and-transformjs-rock/\\\">和transformjs一起摇摆</a></li>\\n<li><a href=\\\"https://github.com/AlloyTeam/AlloyTouch/blob/master/transformjs/transform.js\\\">transform.js</a></li>\\n<li><a href=\\\"http://www.zhangxinxu.com/wordpress/2012/06/css3-transform-matrix-%E7%9F%A9%E9%98%B5/\\\">理解CSS3 transform中的Matrix(矩阵)</a></li>\\n<li><a href=\\\"http://www.zhangxinxu.com/wordpress/2012/09/css3-3d-transform-perspective-animate-transition/\\\">好吧，CSS3 3D transform变换，不过如此！</a></li>\\n</ol>\",\"frontmatter\":{\"title\":\"matrix3d\",\"date\":\"December 07, 2016\",\"tags\":[\"CSS\",\"JavaScript\",\"学习笔记\",\"transform\"]},\"fields\":{\"slug\":\"/matrix3d/\"}}},\"pathContext\":{\"slug\":\"/matrix3d/\"}}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/json-loader!./.cache/json/posts-matrix-3-d.json\n// module id = 488\n// module chunks = 279955836971147"],"sourceRoot":""}