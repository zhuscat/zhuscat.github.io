{"componentChunkName":"component---src-templates-blog-post-js","path":"/posts/rocketmq-deployment","result":{"data":{"site":{"siteMetadata":{"title":"ZhusCafe"}},"markdownRemark":{"html":"<p>现在公司用了 RocketMQ，所以想自己在本地部署看看。有两种方式，一种是下载源码自己编译，一种是直接下载编译好的：</p>\n<p><a href=\"https://rocketmq.apache.org/docs/quick-start/\">下载地址</a></p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\"><span class=\"token comment\"># 自己编译</span>\n<span class=\"token operator\">></span> <span class=\"token function\">unzip</span> rocketmq-all-4.8.0-source-release.zip\n<span class=\"token operator\">></span> <span class=\"token builtin class-name\">cd</span> rocketmq-all-4.8.0/\n<span class=\"token operator\">></span> mvn -Prelease-all -DskipTests clean <span class=\"token function\">install</span> -U\n<span class=\"token operator\">></span> <span class=\"token builtin class-name\">cd</span> distribution/target/rocketmq-4.8.0/rocketmq-4.8.0</code></pre></div>\n<p>编译完之后先启动 Name Server 再启动 Broker</p>\n<p>比如说在 Binary 的包里面，在 <code class=\"language-text\">bin</code> 目录下面，执行：</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\"><span class=\"token comment\"># 运行 name server，默认端口是 9876</span>\n./mqnamesrv\n<span class=\"token comment\"># 运行 broker</span>\n./mqbroker -n localhost:9876</code></pre></div>\n<p>一开始我启动的时候一直失败，报错大概是这样的</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\">Error: Could not create the Java Virtual Machine.</code></pre></div>\n<p>后来排查到是 Java/JDK 版本的问题（不太了解 Java 体系，反正是版本问题，之后可以好好学习一下），当时是 <code class=\"language-text\">jdk-9.0.1.jdk</code> ，然后我就再安装了 <code class=\"language-text\">openjdk 8</code>，用 Homebrew 装就行了</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\">brew <span class=\"token function\">install</span> openjdk@8</code></pre></div>\n<p>然后 link 一下</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\"><span class=\"token function\">sudo</span> <span class=\"token function\">ln</span> -sfn /usr/local/opt/openjdk@8/libexec/openjdk.jdk /Library/Java/JavaVirtualMachines/openjdk-8.jdk</code></pre></div>\n<p>然后我还修改了 <code class=\"language-text\">JAVA_HOME</code></p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\"><span class=\"token builtin class-name\">export</span> <span class=\"token assign-left variable\">JAVA_HOME</span><span class=\"token operator\">=</span>/Library/Java/JavaVirtualMachines/openjdk-8.jdk/Contents/Home</code></pre></div>\n<p>改完之后就可以运行起来了</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\"><span class=\"token operator\">></span> mqnamesrv\n<span class=\"token operator\">></span> mqbroker -n localhost:9876</code></pre></div>\n<p>然后就可以跑 Demo 试试了，然后我想弄个 console 试下</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\"><span class=\"token comment\"># 下载源码</span>\n<span class=\"token operator\">></span> <span class=\"token function\">git</span> clone https://github.com/apache/rocketmq-externals.git\n<span class=\"token comment\"># 进入对应目录</span>\n<span class=\"token operator\">></span> <span class=\"token builtin class-name\">cd</span> rocketmq-console\n<span class=\"token comment\"># 编译，产物在 target 里面</span>\n<span class=\"token operator\">></span> mvn clean package -Dmaven.test.skip<span class=\"token operator\">=</span>true</code></pre></div>\n<p>编译完之后运行一下</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\">java -jar target/rocketmq-console-ng-2.0.0.jar --rocketmq.config.namesrvAddr<span class=\"token operator\">=</span><span class=\"token string\">'localhost:9876'</span></code></pre></div>\n<p><code class=\"language-text\">rocketmq-externals</code> 的 master 分支 console 的版本是 2.0.0，然后进入 Web 管理界面的时候发现报错，大概是：</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">rocketmq org.apache.rocketmq.remoting.exception.RemotingConnectException:connect to &lt;127.0.0.1:9876&gt; failed</code></pre></div>\n<p>通过更改各种 <code class=\"language-text\">namesrvAddr</code> 的方式都没有用，网上一顿找才找到一个解决方案是使用 1.0.0 版本的 console</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\"><span class=\"token comment\"># 切换分支到 console 1.0.0 版本的</span>\n<span class=\"token operator\">></span> <span class=\"token function\">git</span> checkout rocketmq-console-1.0.0\n<span class=\"token operator\">></span> mvn clean package -Dmaven.test.skip<span class=\"token operator\">=</span>true\n<span class=\"token operator\">></span> java -jar target/rocketmq-console-ng-1.0.0.jar --rocketmq.config.namesrvAddr<span class=\"token operator\">=</span><span class=\"token string\">'localhost:9876'</span></code></pre></div>\n<p>使用 1.0.0 版本运行就完美了，本地部署大概就是这样</p>","frontmatter":{"title":"在 macOS 本地部署 RocketMQ","date":"May 13, 2021","tags":["技术","后端","消息队列","实践"]},"fields":{"slug":"/posts/rocketmq-deployment/"}}},"pageContext":{"slug":"/posts/rocketmq-deployment/"}},"staticQueryHashes":["3159585216"]}