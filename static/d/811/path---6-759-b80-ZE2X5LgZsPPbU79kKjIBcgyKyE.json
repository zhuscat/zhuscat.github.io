{"pageContext":{"isCreatedByStatefulCreatePages":false,"group":[{"node":{"id":"1611bc59-7a68-5f7f-aeff-0a2edab2229f","timeToRead":1,"frontmatter":{"title":"用 webpack 遇到的坑","date":"Jul 20, 2016","tags":["前端","开发"]},"fields":{"slug":"/posts/solve-webpack-problems/"},"excerpt":"<p>node 是好久之前装的了，更新了一下，问题出现多多</p>\n<p>首先是 npm 出现了一些问题，错误大概是这个样子的：</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">fs: re-evaluating native module sources is not supported. If you are using the graceful-fs module, please update it to a more recent version.</code></pre></div>\n<p>然后通过更新 npm 解决了：</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">sudo npm update -g npm</code></pre></div>\n<p>接着，全局安装 webpack</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">npm install -g webpack</code></pre></div>\n<p>使用 webpack 的时候出现了以下问题：</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">Error: Cannot find module &#39;webpack/lib/node/NodeTemplatePlugin&#39;</code></pre></div>\n<p>看了一下有没有 <code class=\"language-text\">NodeTemplatePlugin</code>，结果是有的。</p>\n<p>我的心情是这样的</p>\n<p><img src=\"https://i.loli.net/2018/11/17/5befc787db25c.png\" alt=\"表情1\"></p>\n<p>然后继续各种搜索，总算找到办法，原来是要设置 <code class=\"language-text\">NODE_PATH</code>，我用的是 fish shell，打开 <code class=\"language-text\">config.fish</code>，加上一行:</p>"}},{"node":{"id":"fc372182-bfaa-5378-8d35-503044b3ffb7","timeToRead":1,"frontmatter":{"title":"学习 FoldingCell 笔记","date":"Jun 25, 2016","tags":["学习笔记","技术","开发","Swift","iOS"]},"fields":{"slug":"/posts/read-folding-cell/"},"excerpt":"<ol>\n<li><code class=\"language-text\">@IBInspectable</code> 加了这个之后的属性可以在 storyboard 中显示</li>\n<li><code class=\"language-text\">m34</code> 透视效果</li>\n<li>改变了 <code class=\"language-text\">anchorPoint</code>，如果是使用 <code class=\"language-text\">AutoLayout</code> 是要对约束做相应的修改，如一下场景，有一个视图 view1 ，有一个视图view2，view2是 view1 的 subview，view2 的约束是顶部在 view1 的顶部，左边在 view1 的左边，右边在 view1 的右边，高度为 view1 的高度，如果给 vie…</li></ol>"}},{"node":{"id":"a2c76c38-e62a-51e5-8a8c-87e0860d6c45","timeToRead":5,"frontmatter":{"title":"CAAnimation","date":"Jun 24, 2016","tags":["学习笔记","技术","开发","Swift","iOS"]},"fields":{"slug":"/posts/caanimation/"},"excerpt":"<p>这是一篇以前写的笔记。无聊放上来吧。</p>\n<!-- more -->\n<h1>CABasicAnimation</h1>\n<h2>一段展示了CABasicAnimation用法的代码</h2>\n<div class=\"gatsby-highlight\" data-language=\"swift\"><pre class=\"language-swift\"><code class=\"language-swift\"><span class=\"token keyword\">import</span> <span class=\"token builtin\">UIKit</span>\n\n<span class=\"token keyword\">class</span> <span class=\"token class-name\">ViewController</span><span class=\"token punctuation\">:</span> <span class=\"token builtin\">UIViewController</span> <span class=\"token punctuation\">{</span>\n\n    <span class=\"token keyword\">override</span> <span class=\"token keyword\">func</span> <span class=\"token function\">viewDidLoad</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">super</span><span class=\"token punctuation\">.</span><span class=\"token function\">viewDidLoad</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n        <span class=\"token comment\">// Do any additional setup after loading the view, typically from a nib.</span>\n        <span class=\"token function\">setupScaleLayer</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n\n        <span class=\"token function\">setupGroupLayer</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">}</span>\n\n    <span class=\"token keyword\">func</span> <span class=\"token function\">setupScaleLayer</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">let</span> scaleLayer <span class=\"token operator\">=</span> <span class=\"token function\">CALayer</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n        scaleLayer<span class=\"token punctuation\">.</span>backgroundColor <span class=\"token operator\">=</span> <span class=\"token builtin\">UIColor</span><span class=\"token punctuation\">.</span><span class=\"token function\">blueColor</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token builtin\">CGColor</span>\n        scaleLayer<span class=\"token punctuation\">.</span>frame <span class=\"token operator\">=</span> <span class=\"token function\">CGRect</span><span class=\"token punctuation\">(</span>x<span class=\"token punctuation\">:</span> <span class=\"token number\">40</span><span class=\"token punctuation\">,</span> y<span class=\"token punctuation\">:</span> <span class=\"token number\">40</span><span class=\"token punctuation\">,</span> width<span class=\"token punctuation\">:</span> <span class=\"token number\">100</span><span class=\"token punctuation\">,</span> height<span class=\"token punctuation\">:</span> <span class=\"token number\">100</span><span class=\"token punctuation\">)</span>\n        scaleLayer<span class=\"token punctuation\">.</span>cornerRadius <span class=\"token operator\">=</span> <span class=\"token number\">10</span>\n\n        view<span class=\"token punctuation\">.</span>layer<span class=\"token punctuation\">.</span><span class=\"token function\">addSublayer</span><span class=\"token punctuation\">(</span>scaleLayer<span class=\"token punctuation\">)</span>\n\n        <span class=\"token keyword\">let</span> scaleAnimation <span class=\"token operator\">=</span> <span class=\"token function\">CABasicAnimation</span><span class=\"token punctuation\">(</span>keyPath<span class=\"token punctuation\">:</span> <span class=\"token string\">\"transform.scale\"</span><span class=\"token punctuation\">)</span>\n        scaleAnimation<span class=\"token punctuation\">.</span>fromValue <span class=\"token operator\">=</span> <span class=\"token function\">NSNumber</span><span class=\"token punctuation\">(</span>float<span class=\"token punctuation\">:</span> <span class=\"token number\">1.0</span><span class=\"token punctuation\">)</span>\n        scaleAnimation<span class=\"token punctuation\">.</span>toValue <span class=\"token operator\">=</span> <span class=\"token function\">NSNumber</span><span class=\"token punctuation\">(</span>float<span class=\"token punctuation\">:</span> <span class=\"token number\">1.5</span><span class=\"token punctuation\">)</span>\n        scaleAnimation<span class=\"token punctuation\">.</span>autoreverses <span class=\"token operator\">=</span> <span class=\"token boolean\">true</span>\n        scaleAnimation<span class=\"token punctuation\">.</span>fillMode <span class=\"token operator\">=</span> <span class=\"token constant\">kCAFillModeForwards</span>\n        scaleAnimation<span class=\"token punctuation\">.</span>repeatCount <span class=\"token operator\">=</span> <span class=\"token constant\">MAXFLOAT</span>\n        scaleAnimation<span class=\"token punctuation\">.</span>duration <span class=\"token operator\">=</span> <span class=\"token number\">0.8</span>\n\n        scaleLayer<span class=\"token punctuation\">.</span><span class=\"token function\">addAnimation</span><span class=\"token punctuation\">(</span>scaleAnimation<span class=\"token punctuation\">,</span> forKey<span class=\"token punctuation\">:</span> <span class=\"token string\">\"scaleAnimation\"</span><span class=\"token punctuation\">)</span>\n\n    <span class=\"token punctuation\">}</span>\n\n    <span class=\"token keyword\">func</span> <span class=\"token function\">setupGroupLayer</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">let</span> groupLayer <span class=\"token operator\">=</span> <span class=\"token function\">CALayer</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n        groupLayer<span class=\"token punctuation\">.</span>frame <span class=\"token operator\">=</span> <span class=\"token function\">CGRect</span><span class=\"token punctuation\">(</span>x<span class=\"token punctuation\">:</span> <span class=\"token number\">40</span><span class=\"token punctuation\">,</span> y<span class=\"token punctuation\">:</span> <span class=\"token number\">200</span><span class=\"token punctuation\">,</span> width<span class=\"token punctuation\">:</span> <span class=\"token number\">100</span><span class=\"token punctuation\">,</span> height<span class=\"token punctuation\">:</span> <span class=\"token number\">100</span><span class=\"token punctuation\">)</span>\n        groupLayer<span class=\"token punctuation\">.</span>cornerRadius <span class=\"token operator\">=</span> <span class=\"token number\">10</span>\n        groupLayer<span class=\"token punctuation\">.</span>backgroundColor <span class=\"token operator\">=</span> <span class=\"token builtin\">UIColor</span><span class=\"token punctuation\">.</span><span class=\"token function\">yellowColor</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token builtin\">CGColor</span>\n        view<span class=\"token punctuation\">.</span>layer<span class=\"token punctuation\">.</span><span class=\"token function\">addSublayer</span><span class=\"token punctuation\">(</span>groupLayer<span class=\"token punctuation\">)</span>\n\n        <span class=\"token keyword\">let</span> scaleAnimation <span class=\"token operator\">=</span> <span class=\"token function\">CABasicAnimation</span><span class=\"token punctuation\">(</span>keyPath<span class=\"token punctuation\">:</span> <span class=\"token string\">\"transform.scale\"</span><span class=\"token punctuation\">)</span>\n        scaleAnimation<span class=\"token punctuation\">.</span>fromValue <span class=\"token operator\">=</span> <span class=\"token function\">NSNumber</span><span class=\"token punctuation\">(</span>float<span class=\"token punctuation\">:</span> <span class=\"token number\">1.0</span><span class=\"token punctuation\">)</span>\n        scaleAnimation<span class=\"token punctuation\">.</span>toValue <span class=\"token operator\">=</span> <span class=\"token function\">NSNumber</span><span class=\"token punctuation\">(</span>float<span class=\"token punctuation\">:</span> <span class=\"token number\">1.5</span><span class=\"token punctuation\">)</span>\n        scaleAnimation<span class=\"token punctuation\">.</span>autoreverses <span class=\"token operator\">=</span> <span class=\"token boolean\">true</span>\n        scaleAnimation<span class=\"token punctuation\">.</span>repeatCount <span class=\"token operator\">=</span> <span class=\"token constant\">MAXFLOAT</span>\n        scaleAnimation<span class=\"token punctuation\">.</span>duration <span class=\"token operator\">=</span> <span class=\"token number\">0.8</span>\n\n        <span class=\"token keyword\">let</span> moveAnimation <span class=\"token operator\">=</span> <span class=\"token function\">CABasicAnimation</span><span class=\"token punctuation\">(</span>keyPath<span class=\"token punctuation\">:</span> <span class=\"token string\">\"position\"</span><span class=\"token punctuation\">)</span>\n        moveAnimation<span class=\"token punctuation\">.</span>fromValue <span class=\"token operator\">=</span> <span class=\"token function\">NSValue</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">CGPoint</span><span class=\"token punctuation\">:</span> groupLayer<span class=\"token punctuation\">.</span>position<span class=\"token punctuation\">)</span>\n        moveAnimation<span class=\"token punctuation\">.</span>toValue <span class=\"token operator\">=</span> <span class=\"token function\">NSValue</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">CGPoint</span><span class=\"token punctuation\">:</span> <span class=\"token function\">CGPoint</span><span class=\"token punctuation\">(</span>x<span class=\"token punctuation\">:</span> <span class=\"token number\">320.0</span> <span class=\"token operator\">-</span> <span class=\"token number\">80.0</span><span class=\"token punctuation\">,</span> y<span class=\"token punctuation\">:</span> groupLayer<span class=\"token punctuation\">.</span>position<span class=\"token punctuation\">.</span>y<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n        moveAnimation<span class=\"token punctuation\">.</span>autoreverses <span class=\"token operator\">=</span> <span class=\"token boolean\">true</span>\n        moveAnimation<span class=\"token punctuation\">.</span>repeatCount <span class=\"token operator\">=</span> <span class=\"token constant\">MAXFLOAT</span>\n        moveAnimation<span class=\"token punctuation\">.</span>duration <span class=\"token operator\">=</span> <span class=\"token number\">2</span>\n\n        <span class=\"token keyword\">let</span> rotateAnimation <span class=\"token operator\">=</span> <span class=\"token function\">CABasicAnimation</span><span class=\"token punctuation\">(</span>keyPath<span class=\"token punctuation\">:</span> <span class=\"token string\">\"transform.rotation.x\"</span><span class=\"token punctuation\">)</span>\n        rotateAnimation<span class=\"token punctuation\">.</span>fromValue <span class=\"token operator\">=</span> <span class=\"token function\">NSNumber</span><span class=\"token punctuation\">(</span>float<span class=\"token punctuation\">:</span> <span class=\"token number\">0.0</span><span class=\"token punctuation\">)</span>\n        rotateAnimation<span class=\"token punctuation\">.</span>toValue <span class=\"token operator\">=</span> <span class=\"token function\">NSNumber</span><span class=\"token punctuation\">(</span>float<span class=\"token punctuation\">:</span> <span class=\"token number\">6.0</span> <span class=\"token operator\">*</span> <span class=\"token function\">Float</span><span class=\"token punctuation\">(</span><span class=\"token constant\">M_PI</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n        rotateAnimation<span class=\"token punctuation\">.</span>autoreverses <span class=\"token operator\">=</span> <span class=\"token boolean\">true</span>\n        rotateAnimation<span class=\"token punctuation\">.</span>repeatCount <span class=\"token operator\">=</span> <span class=\"token constant\">MAXFLOAT</span>\n        rotateAnimation<span class=\"token punctuation\">.</span>duration <span class=\"token operator\">=</span> <span class=\"token number\">2</span>\n\n        <span class=\"token keyword\">let</span> groupAnnimation <span class=\"token operator\">=</span> <span class=\"token function\">CAAnimationGroup</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n        groupAnnimation<span class=\"token punctuation\">.</span>duration <span class=\"token operator\">=</span> <span class=\"token number\">2</span>\n        groupAnnimation<span class=\"token punctuation\">.</span>autoreverses <span class=\"token operator\">=</span> <span class=\"token boolean\">true</span>\n        groupAnnimation<span class=\"token punctuation\">.</span>animation<span class=\"token operator\">|</span>s <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span>moveAnimation<span class=\"token punctuation\">,</span> scaleAnimation<span class=\"token punctuation\">,</span> rotateAnimation<span class=\"token punctuation\">]</span>\n        groupAnnimation<span class=\"token punctuation\">.</span>repeatCount <span class=\"token operator\">=</span> <span class=\"token constant\">MAXFLOAT</span>\n\n        groupLayer<span class=\"token punctuation\">.</span><span class=\"token function\">addAnimation</span><span class=\"token punctuation\">(</span>groupAnnimation<span class=\"token punctuation\">,</span> forKey<span class=\"token punctuation\">:</span> <span class=\"token string\">\"groupAnnimation\"</span><span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">}</span>\n\n    <span class=\"token keyword\">override</span> <span class=\"token keyword\">func</span> <span class=\"token function\">didReceiveMemoryWarning</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">super</span><span class=\"token punctuation\">.</span><span class=\"token function\">didReceiveMemoryWarning</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n        <span class=\"token comment\">// Dispose of any resources that can be recreated.</span>\n\n\n    <span class=\"token punctuation\">}</span>\n\n<span class=\"token punctuation\">}</span></code></pre></div>\n<h2>Key Path</h2>\n<table>\n<thead>\n<tr>\n<th>Structure Field</th>\n<th>Description</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>rotation.x</td>\n<td>The rotation, in radians, in the x axis.</td>\n</tr>\n<tr>\n<td>rotation.y</td>\n<td>The rotation, in radians, in the y axis.</td>\n</tr>\n<tr>\n<td>rotation.z</td>\n<td>The rotation, in radians, in the z axis.</td>\n</tr></tbody></table>"}},{"node":{"id":"77189053-4dd9-5912-9fe9-49d1b35268d1","timeToRead":1,"frontmatter":{"title":"position 与 anchorPoint","date":"Jun 19, 2016","tags":["学习笔记","技术","开发","iOS"]},"fields":{"slug":"/posts/position-and-anchor-point/"},"excerpt":"<p>简单的记录一下 <code class=\"language-text\">position</code> 与 <code class=\"language-text\">anchorPoint</code></p>\n<!-- more -->\n<h1>属性</h1>\n<p><code class=\"language-text\">UIView</code> 具有的属性： <code class=\"language-text\">frame</code>, <code class=\"language-text\">bounds</code>, <code class=\"language-text\">center</code>\n<code class=\"language-text\">CALayer</code> 具有的属性： <code class=\"language-text\">frame</code>, <code class=\"language-text\">bounds</code>, <code class=\"language-text\">position</code>, <code class=\"language-text\">anchorPoint</code></p>\n<p><code class=\"language-text\">position</code> 是 <code class=\"language-text\">layer</code> 中的 <code class=\"language-text\">anchorPoint</code> 在 <code class=\"language-text\">superLayer</code>中的位置的坐标</p>\n<h1>关系</h1>\n<p>如上所述，那么修改 <code class=\"language-text\">position</code> 或者修改 <code class=\"language-text\">anchorPoint</code> 会对另一方的值造成影响吗？</p>\n<p>答案是不会，因此，<code class=\"language-text\">frame.origin</code> 会收到影响，因此修改 <code class=\"language-text\">achorPoint</code> 会造成视图移动的现象。比如默认 <code class=\"language-text\">anchorPoint</code> 是 <code class=\"language-text\">(0.5, 0.5)</code>，修改成 <code class=\"language-text\">(0.5, 0)</code> 之后视图会下移二分之一的高度。</p>"}},{"node":{"id":"c14653a3-cba8-503a-ba3f-38468fa8b99f","timeToRead":1,"frontmatter":{"title":"漂亮的应用","date":"Jun 18, 2016","tags":["随笔"]},"fields":{"slug":"/posts/nice-app/"},"excerpt":"<p>进入大学两年了，大作业做了两个，也参加了几个项目做了个应用。</p>\n<p>别人对我的作品的评价经常是：“挺漂亮的。”</p>\n<p>挺漂亮的，一定程度上是吧。</p>\n<p>凭借着比其他同学稍微多的那么一点设计能力，不需要其他人的帮助，我可以自己进行界面的设计，我对界面也是有一定的要求，希望做出在视觉上有比较良好效果的应用。</p>"}},{"node":{"id":"e034ca49-cedc-595c-aa0b-9ba44edfb738","timeToRead":1,"frontmatter":{"title":"使用Beego的时候遇到的坑","date":"Jun 07, 2016","tags":["Go","Beego","开发","实践"]},"fields":{"slug":"/posts/beego-problems/"},"excerpt":"<p>记录使用 Beego 的时候遇到的一些问题以及解决方案。</p>\n<h2>存到 MySQL 数据库里的时间跟读取出来的时间有时差</h2>\n<p>原因是保存时间的时候转换成UTC时间，读取时间的时候按照的是本地的时区，然后时间就慢了8个小时，下面是解决办法</p>\n<p>给对应的连接字符串设置一下时区：</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">&quot;root:root@/db?charset=utf8&amp;loc=Asia%2FShanghai&quot;</code></pre></div>\n<p>设置 <code class=\"language-text\">orm</code>的默认时区：</p>\n"}},{"node":{"id":"295e5258-a451-5463-a904-6d4cb1674b02","timeToRead":1,"frontmatter":{"title":"不安","date":"May 23, 2016","tags":["随笔","心情","生活","感想"]},"fields":{"slug":"/posts/agitated/"},"excerpt":"<p>这几天真是烦躁加迷惘加累了。</p>\n<p>实验作业做得烦躁、累。</p>\n<p>人际关系弄不好，心累。</p>\n<p>一堆事情，迷惘。</p>\n<p>唉，在这里发发牢骚。</p>\n<p>调整一下心情，睡一觉，明天照样要来。</p>\n<p>平静地面对吧。</p>"}},{"node":{"id":"8b84f95f-70d9-5408-b8ee-066818fe9f09","timeToRead":2,"frontmatter":{"title":"Swifter 读书笔记","date":"Apr 26, 2016","tags":["学习笔记","技术","开发","Swift","iOS"]},"fields":{"slug":"/posts/note-of-swifter/"},"excerpt":"<p>读了《SWITER 100个Swift必备Tips》，记录了一些东西。</p>\n<!-- more -->\n<ol>\n<li>将 <code class=\"language-text\">protocol</code> 的方法声明为 <code class=\"language-text\">mutating</code> ，可以改变 <code class=\"language-text\">struct</code> 或者 <code class=\"language-text\">enum</code> 中的属性值</li>\n<li>初始化方法顺序：先设置子类自己需要初始化的参数，再调用父类的初始化方法，最后调用父类中需要改变的参数</li>\n<li>在 <code class=\"language-text\">init?</code> 中可以对 <code class=\"language-text\">self</code> 赋值</li>\n<li>获取 <code class=\"language-text\">Self</code> 类型的实例， <code class=\"language-text\">self.dynamicType.init()</code> ，要求需要有 <code class=\"language-text\">required</code> 关键字修饰的初始化方法</li>\n<li>初始化方法对属性的设定，以及在 <code class=\"language-text\">willSet</code> 和 <code class=\"language-text\">didSet</code> 中对属性的再次设定都不会再次触发属性观察器的调用</li></ol>"}},{"node":{"id":"ec7d47e7-6664-5fdd-9654-af4f60b82aaf","timeToRead":2,"frontmatter":{"title":"二维码的生成与扫描","date":"Apr 25, 2016","tags":["学习笔记","技术","开发","Swift","iOS"]},"fields":{"slug":"/posts/qrcode/"},"excerpt":"<p>关于生成二维码、扫描二维码方面的知识。</p>\n<!-- more -->\n<h2>生成二维码</h2>\n<p>步骤：</p>\n<ol>\n<li>创建滤镜</li>\n<li>把相关数据给滤镜</li>\n<li>生成图片</li>\n</ol>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">// 1\nlet filter = CIFilter(name: &quot;CIQRCodeGenerator&quot;)!\nfilter.setDefaults()\n\n// 2\nlet dataString = &quot;http://zhuscat.com/&quot;\nlet data = dataString.dataUsingEncoding(NSUTF8StringEncoding)\nfilter.setValue(data, forKeyPath: &quot;inputMessage&quot;)\n\n// 3\nlet outputImage = filter.outputImage!</code></pre></div>\n<p><strong>注意：</strong>生成的图像比较模糊，需要进一步处理，可以使用以下函数（抄来的）：</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">func createNonInterpolatedUIImageFromCIImge(image: CIImage, size: CGFloat) -&gt; UIImage{\n    let extent = CGRectIntegral(image.extent)\n    let scale = min(size / CGRectGetWidth(extent), size / CGRectGetHeight(extent))\n\n    // 创建 bitmap\n    let width = Int(CGRectGetWidth(extent) * scale)\n    let height = Int(CGRectGetHeight(extent) * scale)\n\n    let cs = CGColorSpaceCreateDeviceGray()\n    let bitmapRef = CGBitmapContextCreate(nil, width, height, 8, 0, cs, CGImageAlphaInfo.None.rawValue)\n    let context = CIContext(options: nil)\n    let bitmapImage = context.createCGImage(image, fromRect: extent)\n    CGContextSetInterpolationQuality(bitmapRef, CGInterpolationQuality.None)\n    CGContextScaleCTM(bitmapRef, scale, scale)\n    CGContextDrawImage(bitmapRef, extent, bitmapImage)\n    let scaledImage = CGBitmapContextCreateImage(bitmapRef)\n    return UIImage(CGImage: scaledImage!)\n}</code></pre></div>\n<h2>扫描二维码</h2>\n<p>步骤：</p>\n<ol>\n<li>创建 session</li>\n<li>添加输入设备</li>\n<li>添加输出</li>\n<li>添加视频层</li>\n<li>开始扫描</li>\n</ol>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">import UIKit\nimport AVFoundation\n\nclass ViewController: UIViewController, AVCaptureMetadataOutputObjectsDelegate {\n\n    weak var session: AVCaptureSession?\n    weak var layer: CALayer?\n\n    override func viewDidLoad() {\n        super.viewDidLoad()\n    }\n\n    override func touchesBegan(touches: Set&lt;UITouch&gt;, withEvent event: UIEvent?) {\n    \t// 1\n        let session = AVCaptureSession()\n        self.session = session\n\n        // 2\n        let device = AVCaptureDevice.defaultDeviceWithMediaType(AVMediaTypeVideo)\n        let input = try? AVCaptureDeviceInput(device: device)\n        session.addInput(input)\n\n        // 3\n        let output = AVCaptureMetadataOutput()\n        output.setMetadataObjectsDelegate(self, queue: dispatch_get_main_queue())\n        session.addOutput(output)\n        output.metadataObjectTypes = [AVMetadataObjectTypeQRCode]\n\n        // 4\n        let layer = AVCaptureVideoPreviewLayer(session: session)\n        layer.frame = view.bounds\n        view.layer.addSublayer(layer)\n        self.layer = layer\n\n        // 5\n        session.startRunning()\n    }\n\n    // 实现步骤3中需要的代理\n    func captureOutput(captureOutput: AVCaptureOutput!, didOutputMetadataObjects metadataObjects: [AnyObject]!, fromConnection connection: AVCaptureConnection!) {\n        if metadataObjects.count &gt; 0 {\n            let object = metadataObjects.last as! AVMetadataMachineReadableCodeObject\n            print(&quot;\\(object.stringValue)&quot;)\n\n            session?.stopRunning()\n\n            self.layer?.removeFromSuperlayer()\n\n        }\n    }\n}</code></pre></div>"}},{"node":{"id":"1020b843-edb7-50e3-9399-dee548fcadb2","timeToRead":2,"frontmatter":{"title":"在 Swift 中使用 SQLite3","date":"Apr 23, 2016","tags":["iOS","Swift","学习笔记"]},"fields":{"slug":"/posts/sqlite3/"},"excerpt":"<p>这篇文章简单的描述了一下如何在 Swift 中使用 SQLite3，并简单地说记录一下一些函数的使用。</p>\n<!-- more -->\n<h1>正文</h1>\n<h2>添加库</h2>\n<p>点击项目设置，选择 TARGETS 中的项目，在 Linked Frameworks and Libraries 中点击 + 号，选择 libsqlite3.0.tbd 或者 libsqlite3.tdb</p>"}}],"pathPrefix":"","first":false,"last":false,"index":6,"pageCount":8,"additionalContext":{}}}