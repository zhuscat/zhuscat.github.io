{"pageContext":{"isCreatedByStatefulCreatePages":false,"group":[{"node":{"id":"8dbeb967-0b94-5e9d-b7c4-26b33f1660da","timeToRead":1,"frontmatter":{"title":"继承属性与非继承属性","date":"Dec 12, 2016","tags":["CSS","前端","学习笔记"]},"fields":{"slug":"/posts/inherited-property-and-non-inherited-property/"},"excerpt":"CSS 属性可以分为继承属性与非继承属性。这决定着当某一属性没有提供值得时候，该属性的值为什么。 继承属性 CSS 继承属性是在没有给元素指定某一属性的时候，该属性的值为属性父元素该值得计算值。 看下面的代码，可以看到   是继承属性，所以   里面的颜色也变为蓝色，而   是…"}},{"node":{"id":"42673128-7a3e-5436-834b-a728c3ed979e","timeToRead":2,"frontmatter":{"title":"阅读 Koa 源码","date":"Dec 11, 2016","tags":["koa","nodejs","JavaScript","Web","学习笔记","源码阅读"]},"fields":{"slug":"/posts/koa/"},"excerpt":"之前阅读了   的源码，其实一开始就是想看一下   的源码，然后   又是基于   构建的，所以先读了一下  ，这次再来记录一下   源码中的东西。 compose  方法返回一个   函数，将所有   串联起来。 首先， 判断   是否为空，如果为空则将   赋值为  （空函…"}},{"node":{"id":"c2e423fe-0a90-580b-9c61-968741687011","timeToRead":2,"frontmatter":{"title":"阅读 co 源码","date":"Dec 10, 2016","tags":["阅读源码","co","异步编程","JavaScript","前端"]},"fields":{"slug":"/posts/co/"},"excerpt":"阅读了一下   的源码，发现其实做法跟我之前看的《你不知道的 JavaScript》中的 Generator + Promise 一节类似。正好巩固了一下这方面的知识，顺便做一些记录。  的源码不多，和注释加起来也才两百多行。其中，一个核心函数就是   了，   可以将   进…"}},{"node":{"id":"dce9e36a-651e-5dde-9e3f-0d87e862f05f","timeToRead":5,"frontmatter":{"title":"matrix3d","date":"Dec 07, 2016","tags":["CSS","JavaScript","学习笔记","transform"]},"fields":{"slug":"/posts/matrix3d/"},"excerpt":"今天看到一篇文章,  和transformjs一起摇摆 , 顺便去看了一下源码, 源码不是很多,一百八十多行, 于是仔细阅读了一下, 变形的实现是通过 CSS 的 transform 属性完成的. 一个关键的方法是  , 代码如下: 最终这个函数会 \" \" 如  ,   这些 …"}},{"node":{"id":"7b9b1027-ef6a-54bf-9711-364c9294eb14","timeToRead":2,"frontmatter":{"title":"LaTex Tips","date":"Dec 06, 2016","tags":["LaTex","技巧","学习笔记","写作"]},"fields":{"slug":"/posts/latex/"},"excerpt":"记录了一些 LaTex 的小知识点与资料，不是教程。 起步 添加标题作者 支持中文 加粗 字号 列表 参考文献 写伪代码 使用   包 基本命令： 修改 ,  ,   标签： 例子： 数学符号以及希腊字母 参考  常用数学符号的 LaTeX 表示方法 学习资料 一份其实很短的 …"}},{"node":{"id":"b7f964dd-2b7b-5288-ad3e-35e10f39269e","timeToRead":2,"frontmatter":{"title":"generator","date":"Nov 24, 2016","tags":["前端","JavaScript","ES6"]},"fields":{"slug":"/posts/generator/"},"excerpt":"Generator 是一种可以暂停的函数，通过使用   来进行控制。 基本 本文通过一段代码来解释 generator 的机制。 generator 一种特殊的函数，其通过在   和函数签名之间加上一个   来定义，  的位置没有要求，因此，以下任何一种方式都是合法的： 首先通…"}},{"node":{"id":"9488ecdf-6d1a-5665-9d8b-b08fec38a1f8","timeToRead":1,"frontmatter":{"title":"Loose Equal","date":"Nov 18, 2016","tags":["前端","JavaScript"]},"fields":{"slug":"/posts/loose-equal/"},"excerpt":" 在   中与其他许多语言有着不同的行为，在   中，  在比较双方的类型不同的时候进行强制类型转换，正因为这点，  运算符遭到了很多人的诟病，但是，  也有着自己的优势，比如适当的时候可以让代码更加简洁，  的转换规则并不难，本文总结了其转换规则供大家参考。 特殊情况  不等…"}},{"node":{"id":"10f33f72-61e3-57b3-8922-97b08cab696a","timeToRead":1,"frontmatter":{"title":"《编写可维护的 JavaScript》读后感","date":"Nov 07, 2016","tags":["JavaScript","读后感","前端"]},"fields":{"slug":"/posts/maintainable-javascript/"},"excerpt":"今天读了《编写可维护的 JavaScript》，基本上是用很快的速度把这本书看完了。 不得不感叹一下前端变化之快，书中很多东西现在都有了变化。这本书比较适合 JavaScript 的初学者，很多内容都是老生常谈的了。比如缩进、是否使用分号、变量命名等等，这些东西其实在项目中开启…"}},{"node":{"id":"07849c16-43d6-50ef-a27f-0be502cbb6b3","timeToRead":1,"frontmatter":{"title":"在前端压缩图片","date":"Nov 07, 2016","tags":["前端"]},"fields":{"slug":"/posts/compress-image-at-front-ent/"},"excerpt":"前端经常有上传图片的需求，比如上传头像，但用户可能会选择一张很大的图片，这个时候我们可以选择将图片压缩，然后再上传。 压缩的思路如下： 获取图片文件 将文件转为 Blob URL 或者 Data URL 将该 URL 赋值给一个 Image 对象 在 Image 对象加载完毕之…"}},{"node":{"id":"e35cb00d-8a40-5823-80d8-f62fbff68298","timeToRead":2,"frontmatter":{"title":"关于原型","date":"Oct 20, 2016","tags":["前端","JavaScript"]},"fields":{"slug":"/posts/prototype/"},"excerpt":"JavaScript 是目前唯一广泛使用的基于原型的语言，然而，JavaScript 中掺杂了许多类的语法元素，比如   ， ， ，这些东西掩盖了 JavaScript 的本质。实际上，JavaScript 中没有类，本文梳理了   ，  和  ，理解它们，会对 JavaScr…"}}],"pathPrefix":"","first":false,"last":false,"index":3,"pageCount":8,"additionalContext":{}}}