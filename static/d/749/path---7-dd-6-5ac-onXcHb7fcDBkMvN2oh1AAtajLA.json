{"pageContext":{"isCreatedByStatefulCreatePages":false,"group":[{"node":{"id":"0de2b425-059c-5d87-8bf7-94955f626254","timeToRead":1,"frontmatter":{"title":"fish shell","date":"Apr 17, 2016","tags":["实用工具"]},"fields":{"slug":"/posts/fish-shell/"},"excerpt":"<p>今天安装了 fish shell，之前一直用的是 bash，使用了之后发现真的方便了好多，这里简单的记录一下。</p>\n<!-- more -->\n<h2>安装</h2>\n<p>首先说一下我是在 Mac OS X 下使用的。最方便的当然是使用 Homebrew 了，在终端中输入：</p>\n<p><code class=\"language-text\">brew install fish</code></p>\n<p>等待安装完成后，再将 fish shell 设置为默认的 shell</p>"}},{"node":{"id":"82c73ec4-98fd-5b8f-abb6-15cc30e2f9be","timeToRead":1,"frontmatter":{"title":"Mac OS X 下一些命令的整理","date":"Apr 13, 2016","tags":["Mac OS X","终端"]},"fields":{"slug":"/posts/useful-command-in-os-x/"},"excerpt":"<p>记录一些平时不常用到，但是用到的时候又要各种找的命令。</p>\n<!-- more -->\n<h2>列表</h2>\n<p>1.显示与不显示隐藏的文件</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">显示：defaults write com.apple.finder AppleShowAllFiles -bool true\n隐藏：defaults write com.apple.finder AppleShowAllFiles -bool false</code></pre></div>\n<p>在写入命令后，如果需要立即生效，<code class=\"language-text\">option + command + esc</code>，重新启动 Finder</p>\n<p>2.合并两个静态文件</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">显示相关信息：lipo -info &lt;.a 或者 .framework里面的那个可执行文件&gt;\n进行合并操作：lipo -create &lt;文件&gt; &lt;文件&gt; -output &lt;文件名&gt;</code></pre></div>\n<p>3.修改默认 shell</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">这里修改为fish：chsh -s /usr/local/bin/fish</code></pre></div>\n<p>还有一些命令，但是没有记录，如果以后又用到的话就记录下来方便查阅。</p>\n<p>4.进入 Swift 命令行工具</p>"}},{"node":{"id":"7d141efd-44d6-5074-a6d8-17c41d201aa1","timeToRead":1,"frontmatter":{"title":"KVO 知识","date":"Apr 10, 2016","tags":["学习笔记","技术","开发","Swift","iOS"]},"fields":{"slug":"/posts/about-kvo/"},"excerpt":"<p>KVO 相关知识</p>\n<!-- more -->\n<h2>自动通知</h2>\n<p>系统默认是自动通知</p>\n<p>在 Swift 中，需要确保观察者和被观察者都是NSObject的子类。\n并且，被观察的属性前面要加上 <code class=\"language-text\">dynamic</code> 关键字。</p>\n<p>如下代码：</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">class Object: NSObject {\n    dynamic var propertyOne: String = &quot;property&quot;\n    dynamic var propertyTwo: Int = 0\n}</code></pre></div>\n<p>然后就可以为这个类的实例添加观察者了。比如我添加一个控制器为其观察者。</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">class ViewController: UIViewController {\n\n    var object = Object()\n\n    override func viewDidLoad() {\n        super.viewDidLoad()\n        object.addObserver(self, forKeyPath: &quot;propertyOne&quot;, options: NSKeyValueObservingOptions.New, context: nil)\n        object.addObserver(self, forKeyPath: &quot;propertyTwo&quot;, options: NSKeyValueObservingOptions.New, context: nil)\n    }\n\n    override func observeValueForKeyPath(keyPath: String?, ofObject object: AnyObject?, change: [String : AnyObject]?, context: UnsafeMutablePointer&lt;Void&gt;) {\n        if keyPath == &quot;propertyOne&quot; {\n            print(&quot;propertyOne:\\(change![NSKeyValueChangeNewKey] as! String)&quot;)\n        } else if keyPath == &quot;propertyTwo&quot; {\n            print(&quot;propertyTwo:\\(change![NSKeyValueChangeNewKey] as! Int)&quot;)\n        } else {\n            super.observeValueForKeyPath(keyPath, ofObject: object, change: change, context: context)\n        }\n    }\n\n    deinit {\n        self.removeObserver(self, forKeyPath: &quot;propertyOne&quot;)\n        self.removeObserver(self, forKeyPath: &quot;propertyTwo&quot;)\n    }\n\n    override func touchesBegan(touches: Set&lt;UITouch&gt;, withEvent event: UIEvent?) {\n        object.propertyOne = &quot;propertyChange&quot;\n        object.propertyTwo = 2\n    }\n}</code></pre></div>\n<p>如此在点击屏幕的时候可以看到输出。</p>"}},{"node":{"id":"41ec92c6-eb8f-57e9-95eb-7f844f1c51bc","timeToRead":1,"frontmatter":{"title":"躁","date":"Apr 04, 2016","tags":["随笔"]},"fields":{"slug":"/posts/take-it-easy/"},"excerpt":"<p>外面打起了雷，室内黑压压的，也许是放假的缘故，有闲时间胡思乱想吧。</p>\n<!-- more -->\n<p>也许是因为天气的原因吧，心情也变得有些不好。</p>\n<p>今天早上突然收到消息，研究生师姐问我之前要我做的图做好了没有（一个商品推荐网站的设计图），于是，早上出去回来后，开启了十足的马力，我赶紧补了几张图发了过去。真是假期的时候也不能好好休息。</p>"}},{"node":{"id":"7919bb6f-dff5-5f4a-9452-2e2cd3ece636","timeToRead":1,"frontmatter":{"title":"一些需要在Info.plist中配置的东西","date":"Mar 23, 2016","tags":["iOS","开发","技术"]},"fields":{"slug":"/posts/something-about-info-plist/"},"excerpt":"<p>有些东西得在 <code class=\"language-text\">Info.plist</code> 中配置，这里记录一下，持续更新。</p>\n<!-- more -->\n<h1>UIWebView不能加载某些网址</h1>\n<p>在 <code class=\"language-text\">Info.plist</code> 中加入以下字段：</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">&lt;key&gt;NSAppTransportSecurity&lt;/key&gt;\n&lt;dict&gt;\n    &lt;key&gt;NSAllowsArbitraryLoads&lt;/key&gt;\n        &lt;true/&gt;\n&lt;/dict&gt;</code></pre></div>\n<h1>定位权限</h1>\n<p>在 <code class=\"language-text\">Info.plist</code> 中加入如下字段，值设为YES：</p>\n<h2>允许在前台获取GPS的描述:</h2>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">NSLocationWhenInUseUsageDescription</code></pre></div>\n<h2>允许在前后台获取CPS的描述：</h2>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">NSLocationAlwaysUsageDescription</code></pre></div>"}},{"node":{"id":"0da358c9-273d-5664-b64d-c951f3d6a0b7","timeToRead":1,"frontmatter":{"title":"一个关于“二”的故事","date":"Mar 06, 2016","tags":["随笔"]},"fields":{"slug":"/posts/a-story-about-two/"},"excerpt":"<p>好久没有写博文了，写一个关于“二”的故事吧。</p>\n<!-- more -->\n<p>为了创新学分，这几天都在写一个项目，项目涉及网络。</p>\n<p>一个地方是点赞，点了之后我马上给本地UI的数字加一，然后等网络最终返回是否成功点赞了，再进行UI更新。</p>\n<p>一开始另一个同学只写了一个点赞接口给我（调用之后改变服务器数据），叫我先测试一下。</p>"}},{"node":{"id":"5b232688-6db8-5f1a-90ee-a7ea8c40d978","timeToRead":1,"frontmatter":{"title":"关于布局","date":"Feb 14, 2016","tags":["学习笔记","技术","开发","Swift","iOS"]},"fields":{"slug":"/posts/about-layout/"},"excerpt":"<p>关于布局的一些知识。更新中，如有错误欢迎指出。</p>\n<!-- more -->\n<h2>正文</h2>\n<h3>layoutSubviews 什么时候被调用</h3>\n<ol>\n<li>init(frame: CGRect) 且 frame 不为 CGRectZero</li>\n<li>addSubview</li>\n<li>设置 frame 且与之前的 frame 不同</li>\n<li>滚动 UIScrollView</li>\n<li>旋转屏幕触发父 UIView 的 layoutSubviews</li>\n<li>更改 view 的大小也会触发父 UIView 的 layoutSubviews</li></ol>"}},{"node":{"id":"0f889267-263d-5769-9af3-ad59caadde0f","timeToRead":2,"frontmatter":{"title":"下拉刷新 TableView","date":"Jan 31, 2016","tags":["技术","实践","开发","Swift","iOS"]},"fields":{"slug":"/posts/pull-to-refresh-table-view/"},"excerpt":"<p>写这篇文章的原因是看到一个网站 <a href=\"http://samvlu.com\">100 Days of Swift</a> ，这个网站里放着作者学习100天里所做的一些作品，如果有源码就更好了。这些作品，对我这个初学者来说可以说是很好的练手项目了。于是我准备去写这些作品中的一些效果，当然从简单开始啦，这个是那个网站的 PROJECT 10，以下是效果图（来自 100 Day of Swift）。</p>"}},{"node":{"id":"c27723c1-2df7-52af-8e6f-77b057587e85","timeToRead":2,"frontmatter":{"title":"UIImagePickerController 学习笔记","date":"Jan 30, 2016","tags":["学习笔记","技术","开发","Swift","iOS"]},"fields":{"slug":"/posts/note-of-uiimagepickercontroller/"},"excerpt":"<p>UIImagePickerController 用来从拍照、照片、相簿中获取图片，看看如何使用吧。</p>\n<!-- more -->\n<h1>正文</h1>\n<h2>检测设备是否支持</h2>\n<p>UIImagePickerController 需要设置数据来源，数据来源有：</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">enum UIImagePickerControllerSourceType : Int {\n    case PhotoLibrary\n    case Camera\n    case SavedPhotosAlbum\n}</code></pre></div>\n<p>默认是 <code class=\"language-text\">UIImagePickerControllerSourceType.PhotoLibrary</code> 。</p>\n<p>如果你需要在多设备上使用 UIImagePickerController，最好在呈现前检测一下设备是否支持，比如有些设备没有摄像头，就不支持 <code class=\"language-text\">.Camera</code> 。</p>"}},{"node":{"id":"a7b81192-dec2-5134-85b3-9b03d8360803","timeToRead":2,"frontmatter":{"title":"轻扫隐藏键盘以及导航栏定制","date":"Jan 29, 2016","tags":["技术","实践","开发","Swift","iOS"]},"fields":{"slug":"/posts/swift-day-one/"},"excerpt":"<p>写这篇文章的原因是看到一个网站 <a href=\"http://samvlu.com\">100 Days of Swift</a> ，这个网站里放着作者学习100天里所做的一些作品，如果有源码就更好了。这些作品，对我这个初学者来说可以说是很好的练手项目了。于是我准备去写这些作品中的一些效果，当然从简单开始啦，这个是那个网站的 PROJECT 8，以下是效果图（来自 100 Day of Swift）。</p>"}}],"pathPrefix":"","first":false,"last":false,"index":7,"pageCount":8,"additionalContext":{}}}