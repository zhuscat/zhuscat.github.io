{"pageContext":{"isCreatedByStatefulCreatePages":false,"group":[{"node":{"id":"0c4ec741-875e-5125-9ec5-0687e205ce70","timeToRead":1,"frontmatter":{"title":"解决生成的 CSV 在 Excel 打开乱码","date":"May 07, 2019","tags":["编码"]},"fields":{"slug":"/posts/generated-csv-garbled/"},"excerpt":"最近做了一个将 CSV 字符串内容保存为文件的功能（在浏览器中），由于我自己电脑上没有 Excel，在使用 Keynote 和纯文本形式打开没问题之后就觉得 OK 了。但是后来用户反馈用 Excel…"}},{"node":{"id":"bfae218e-5504-5a73-899f-ca33a81dbcd2","timeToRead":1,"frontmatter":{"title":"Webpack 场景下隐性的不同模块规范混用","date":"Apr 30, 2019","tags":["前端","Webpack"]},"fields":{"slug":"/posts/webpack-mixed-module-types/"},"excerpt":"这是之前重构项目的时候遇到的一个问题，整理一下写成文章。我们知道，Webpack 打包的 JS 文件不能混用 ES Module 与 CommonJS，但即使在文件中没有混用，也可能因为 Babel…"}},{"node":{"id":"68c203d4-8f7a-5ab4-b44d-fd7c18f877e4","timeToRead":1,"frontmatter":{"title":"说说 JavaScript 中的数字","date":"Apr 20, 2019","tags":["JavaScript"]},"fields":{"slug":"/posts/javascript-number/"},"excerpt":"JavaScript 中的数字（  类型）占据 64 位，为 IEEE 754 规范的双精度浮点数，其二进制的表示形式如下： 规约形式的浮点数(normal number) 数值大小公式为： 其中，…"}},{"node":{"id":"948c98b4-8c86-5356-9d43-b95bd2aea78f","timeToRead":1,"frontmatter":{"title":"一场对 Provisional headers are shown 的探索之旅","date":"Apr 12, 2019","tags":["浏览器"]},"fields":{"slug":"/posts/provisional-headers-are-shown/"},"excerpt":"经常使用 Chrome 的 Network 面板会发现，即使是正常成功返回的跨域请求，在 Request Header 一栏还是会显示  Provisional headers are shown …"}},{"node":{"id":"307174ef-a3f3-531f-afb9-f47b809d810a","timeToRead":1,"frontmatter":{"title":"对 React setState 的误解","date":"Apr 11, 2019","tags":["前端","JavaScript","React"]},"fields":{"slug":"/posts/a-misunderstanding-of-react-set-state/"},"excerpt":"之前一直以为同步的几个     调用批量合并再一次性更新，结果发现这是我的一个误解。 如上所示的一个例子，控制台的输出为： 也就是说虽然调用了两次  ，但实际上只执行一次  ，而之前我以为任何情况下…"}},{"node":{"id":"804f35ea-e506-5edc-ab68-75d323b0b2b7","timeToRead":1,"frontmatter":{"title":"一个图片不显示的问题","date":"Nov 12, 2018","tags":["CSS","前端"]},"fields":{"slug":"/posts/img-not-show-problem/"},"excerpt":"今天帮同事看一个图片不显示的问题，情况是在电脑上图片都是正常显示的，但是在 iOS 上发现一些图片显示，一些图片不显示。接到问题的时候对这个问题的描述是没有显示图片的 元素没有对应的图片请求，以 设…"}},{"node":{"id":"39f864e5-4315-54ee-8f74-0948619aa620","timeToRead":1,"frontmatter":{"title":"TypeScript rootDirs 是怎么工作的","date":"Jun 08, 2018","tags":["TypeScript","配置"]},"fields":{"slug":"/posts/typescript-rootdirs/"},"excerpt":"在 TypeScript 中可以利用 rootDirs 指定虚拟目录，若不了解，可以阅读 Module Resolution · TypeScript 。 解析步骤 在上面链接的文章中有一个假象的国…"}},{"node":{"id":"5ef81d8f-113c-50f3-8234-5b8ecbc6014b","timeToRead":1,"frontmatter":{"title":"About Promise.prototype.finally","date":"Mar 04, 2018","tags":["前端","JavaScript"]},"fields":{"slug":"/posts/about-promise-prototype-finally/"},"excerpt":"今天随意浏览，发现   已经进入到   了，顺便记录一下规范中   的一些注意点吧。 使用方法 注意点 1、   中的回调函数不接受任何参数 2、在调用了   之后返回的仍然是一个  ，它会将前面操…"}},{"node":{"id":"6cfa10e5-f4f1-5215-a79b-6b9a97a08c0e","timeToRead":1,"frontmatter":{"title":"前端错误小知识","date":"Nov 03, 2017","tags":["前端","JavaScript"]},"fields":{"slug":"/posts/about-front-end-error/"},"excerpt":"window.onerror  是顶层的错误处理函数，大部分抛出的未被处理的错误可以在这里进行统一处理。如下所示： 另外，如果在函数中   的话，错误不会继续向上抛出，也就是不会再浏览器控制台出现 …"}},{"node":{"id":"06aaefeb-0e4d-5f9b-bf8e-fcd8a53af3a4","timeToRead":1,"frontmatter":{"title":"使用 Whistle 对 iOS HTTPS 进行抓包","date":"Sep 20, 2017","tags":["抓包","网络","Web"]},"fields":{"slug":"/posts/https-proxy-on-ios/"},"excerpt":"Whistle  是一款 Web Debugging Proxy，类似的工具还有 Fiddler，Charles。不过，Fiddler 在 macOS 上不尽完美（我没有开启成功过，不知道什么情况）…"}}],"pathPrefix":"","first":true,"last":false,"index":1,"pageCount":9,"additionalContext":{}}}