{"pageContext":{"isCreatedByStatefulCreatePages":false,"group":[{"node":{"id":"8dbeb967-0b94-5e9d-b7c4-26b33f1660da","timeToRead":1,"frontmatter":{"title":"继承属性与非继承属性","date":"Dec 12, 2016","tags":["CSS","前端","学习笔记"]},"fields":{"slug":"/posts/inherited-property-and-non-inherited-property/"},"excerpt":"<p>CSS 属性可以分为继承属性与非继承属性。这决定着当某一属性没有提供值得时候，该属性的值为什么。</p>\n<h2>继承属性</h2>\n<p>CSS 继承属性是在没有给元素指定某一属性的时候，该属性的值为属性父元素该值得计算值。</p>\n<p>看下面的代码，可以看到 <code class=\"language-text\">color</code> 是继承属性，所以 <code class=\"language-text\">span</code> 里面的颜色也变为蓝色，而 <code class=\"language-text\">border</code> 是非继承属性，所以 <code class=\"language-text\">span</code> 并没有边框。</p>"}},{"node":{"id":"42673128-7a3e-5436-834b-a728c3ed979e","timeToRead":2,"frontmatter":{"title":"阅读 Koa 源码","date":"Dec 11, 2016","tags":["koa","nodejs","JavaScript","Web","学习笔记","源码阅读"]},"fields":{"slug":"/posts/koa/"},"excerpt":"<p>之前阅读了 <code class=\"language-text\">co</code> 的源码，其实一开始就是想看一下 <code class=\"language-text\">koa</code> 的源码，然后 <code class=\"language-text\">koa</code> 又是基于 <code class=\"language-text\">co</code> 构建的，所以先读了一下 <code class=\"language-text\">co</code>，这次再来记录一下 <code class=\"language-text\">koa</code> 源码中的东西。</p>\n<h2>compose</h2>\n<p><code class=\"language-text\">compose</code> 方法返回一个 <code class=\"language-text\">Generator</code> 函数，将所有 <code class=\"language-text\">middleware</code> 串联起来。</p>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">function</span> <span class=\"token function\">compose</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">middleware</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">return</span> <span class=\"token keyword\">function</span> <span class=\"token operator\">*</span><span class=\"token punctuation\">(</span>next<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n      <span class=\"token comment\">// ...</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>首先， 判断 <code class=\"language-text\">next</code> 是否为空，如果为空则将 <code class=\"language-text\">next</code> 赋值为 <code class=\"language-text\">noop</code>（空函数）。</p>\n<p>接着逆序遍历 <code class=\"language-text\">middleware</code>，把 <code class=\"language-text\">middleware</code> 数组中的后一个产生的 <code class=\"language-text\">iterator</code> 作为前一个 <code class=\"language-text\">middleware</code> 的参数。</p>"}},{"node":{"id":"c2e423fe-0a90-580b-9c61-968741687011","timeToRead":2,"frontmatter":{"title":"阅读 co 源码","date":"Dec 10, 2016","tags":["阅读源码","co","异步编程","JavaScript","前端"]},"fields":{"slug":"/posts/co/"},"excerpt":"<p>阅读了一下 <code class=\"language-text\">co</code> 的源码，发现其实做法跟我之前看的《你不知道的 JavaScript》中的 Generator + Promise 一节类似。正好巩固了一下这方面的知识，顺便做一些记录。</p>\n<p><code class=\"language-text\">co</code> 的源码不多，和注释加起来也才两百多行。其中，一个核心函数就是 <code class=\"language-text\">co</code> 了， <code class=\"language-text\">co</code> 可以将 <code class=\"language-text\">Generator</code> 进行自动的执行，本文就来讲一讲 <code class=\"language-text\">co</code> 是怎么实现自动运行 <code class=\"language-text\">Generator</code> 的。</p>"}},{"node":{"id":"dce9e36a-651e-5dde-9e3f-0d87e862f05f","timeToRead":5,"frontmatter":{"title":"matrix3d","date":"Dec 07, 2016","tags":["CSS","JavaScript","学习笔记","transform"]},"fields":{"slug":"/posts/matrix3d/"},"excerpt":"<p>今天看到一篇文章, <a href=\"http://www.alloyteam.com/2016/12/and-transformjs-rock/\">和transformjs一起摇摆</a>, 顺便去看了一下源码, 源码不是很多,一百八十多行, 于是仔细阅读了一下, 变形的实现是通过 CSS 的 transform 属性完成的. 一个关键的方法是 <code class=\"language-text\">watch</code>, 代码如下:</p>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">function</span> <span class=\"token function\">watch</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">target<span class=\"token punctuation\">,</span> prop<span class=\"token punctuation\">,</span> callback</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    Object<span class=\"token punctuation\">.</span><span class=\"token function\">defineProperty</span><span class=\"token punctuation\">(</span>target<span class=\"token punctuation\">,</span> prop<span class=\"token punctuation\">,</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token function-variable function\">get</span><span class=\"token punctuation\">:</span> <span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n            <span class=\"token keyword\">return</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">[</span><span class=\"token string\">\"_\"</span> <span class=\"token operator\">+</span> prop<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n        <span class=\"token function-variable function\">set</span><span class=\"token punctuation\">:</span> <span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">value</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n            <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>value <span class=\"token operator\">!==</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">[</span><span class=\"token string\">\"_\"</span> <span class=\"token operator\">+</span> prop<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n                <span class=\"token keyword\">this</span><span class=\"token punctuation\">[</span><span class=\"token string\">\"_\"</span> <span class=\"token operator\">+</span> prop<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> value<span class=\"token punctuation\">;</span>\n                <span class=\"token function\">callback</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            <span class=\"token punctuation\">}</span>\n\n        <span class=\"token punctuation\">}</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>最终这个函数会 \"<code class=\"language-text\">watch</code>\" 如 <code class=\"language-text\">translateX</code>, <code class=\"language-text\">scaleX</code> 这些 transform 的值, 而 <code class=\"language-text\">callback</code> 则是一个修改 CSS 的 transform 的函数.</p>"}},{"node":{"id":"7b9b1027-ef6a-54bf-9711-364c9294eb14","timeToRead":2,"frontmatter":{"title":"LaTex Tips","date":"Dec 06, 2016","tags":["LaTex","技巧","学习笔记","写作"]},"fields":{"slug":"/posts/latex/"},"excerpt":"<p>记录了一些 LaTex 的小知识点与资料，不是教程。</p>\n<!-- more -->\n<h2>起步</h2>\n<div class=\"gatsby-highlight\" data-language=\"latex\"><pre class=\"language-latex\"><code class=\"language-latex\"><span class=\"token function selector\">\\documentclass</span><span class=\"token punctuation\">{</span><span class=\"token keyword\">article</span><span class=\"token punctuation\">}</span>\n<span class=\"token comment\">% 导言区</span>\n<span class=\"token function selector\">\\begin</span><span class=\"token punctuation\">{</span><span class=\"token keyword\">document</span><span class=\"token punctuation\">}</span>\nHello world\n<span class=\"token function selector\">\\end</span><span class=\"token punctuation\">{</span><span class=\"token keyword\">document</span><span class=\"token punctuation\">}</span></code></pre></div>\n<h2>添加标题作者</h2>\n<div class=\"gatsby-highlight\" data-language=\"latex\"><pre class=\"language-latex\"><code class=\"language-latex\"><span class=\"token function selector\">\\documentclass</span><span class=\"token punctuation\">{</span><span class=\"token keyword\">article</span><span class=\"token punctuation\">}</span>\n<span class=\"token function selector\">\\title</span><span class=\"token punctuation\">{</span>Hello world<span class=\"token punctuation\">}</span>\n<span class=\"token function selector\">\\author</span><span class=\"token punctuation\">{</span>zhuscat<span class=\"token punctuation\">}</span>\n<span class=\"token function selector\">\\date</span><span class=\"token punctuation\">{</span><span class=\"token function selector\">\\today</span><span class=\"token punctuation\">}</span>\n<span class=\"token function selector\">\\begin</span><span class=\"token punctuation\">{</span><span class=\"token keyword\">document</span><span class=\"token punctuation\">}</span>\n<span class=\"token function selector\">\\maketitle</span>\nHello world\n<span class=\"token function selector\">\\end</span><span class=\"token punctuation\">{</span><span class=\"token keyword\">document</span><span class=\"token punctuation\">}</span></code></pre></div>\n<h2>支持中文</h2>\n<div class=\"gatsby-highlight\" data-language=\"latex\"><pre class=\"language-latex\"><code class=\"language-latex\"><span class=\"token function selector\">\\documentclass</span><span class=\"token punctuation\">[</span>UTF8<span class=\"token punctuation\">]</span><span class=\"token punctuation\">{</span><span class=\"token keyword\">ctexart</span><span class=\"token punctuation\">}</span>\n<span class=\"token function selector\">\\title</span><span class=\"token punctuation\">{</span>Hello world<span class=\"token punctuation\">}</span>\n<span class=\"token function selector\">\\author</span><span class=\"token punctuation\">{</span>zhuscat<span class=\"token punctuation\">}</span>\n<span class=\"token function selector\">\\date</span><span class=\"token punctuation\">{</span><span class=\"token function selector\">\\today</span><span class=\"token punctuation\">}</span>\n<span class=\"token function selector\">\\begin</span><span class=\"token punctuation\">{</span><span class=\"token keyword\">document</span><span class=\"token punctuation\">}</span>\n<span class=\"token function selector\">\\maketitle</span>\n你好世界\n<span class=\"token function selector\">\\end</span><span class=\"token punctuation\">{</span><span class=\"token keyword\">document</span><span class=\"token punctuation\">}</span></code></pre></div>\n<h2>加粗</h2>\n<div class=\"gatsby-highlight\" data-language=\"latex\"><pre class=\"language-latex\"><code class=\"language-latex\"><span class=\"token function selector\">\\textbf</span><span class=\"token punctuation\">{</span>Bold<span class=\"token punctuation\">}</span></code></pre></div>\n<h2>字号</h2>\n<div class=\"gatsby-highlight\" data-language=\"latex\"><pre class=\"language-latex\"><code class=\"language-latex\"><span class=\"token function selector\">\\begin</span><span class=\"token punctuation\">{</span><span class=\"token keyword\">small</span><span class=\"token punctuation\">}</span>\n小字体\n<span class=\"token function selector\">\\end</span><span class=\"token punctuation\">{</span><span class=\"token keyword\">small</span><span class=\"token punctuation\">}</span></code></pre></div>\n<h2>列表</h2>\n<div class=\"gatsby-highlight\" data-language=\"latex\"><pre class=\"language-latex\"><code class=\"language-latex\"><span class=\"token function selector\">\\begin</span><span class=\"token punctuation\">{</span><span class=\"token keyword\">itemize</span><span class=\"token punctuation\">}</span>\n    <span class=\"token function selector\">\\item</span> item1\n    <span class=\"token function selector\">\\item</span> item2\n    <span class=\"token function selector\">\\item</span> item3\n    <span class=\"token function selector\">\\item</span> item4\n<span class=\"token function selector\">\\end</span><span class=\"token punctuation\">{</span><span class=\"token keyword\">itemize</span><span class=\"token punctuation\">}</span></code></pre></div>\n<h2>参考文献</h2>\n<div class=\"gatsby-highlight\" data-language=\"latex\"><pre class=\"language-latex\"><code class=\"language-latex\"><span class=\"token function selector\">\\documentclass</span><span class=\"token punctuation\">[</span>UTF8<span class=\"token punctuation\">]</span><span class=\"token punctuation\">{</span><span class=\"token keyword\">ctexart</span><span class=\"token punctuation\">}</span>\n<span class=\"token function selector\">\\usepackage</span><span class=\"token punctuation\">{</span><span class=\"token keyword\">cite</span><span class=\"token punctuation\">}</span>\n<span class=\"token function selector\">\\begin</span><span class=\"token punctuation\">{</span><span class=\"token keyword\">document</span><span class=\"token punctuation\">}</span>\nHello world<span class=\"token function selector\">\\cite</span><span class=\"token punctuation\">{</span><span class=\"token keyword\">ref1</span><span class=\"token punctuation\">}</span>\n<span class=\"token function selector\">\\begin</span><span class=\"token punctuation\">{</span><span class=\"token keyword\">thebibliography</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">{</span>10<span class=\"token punctuation\">}</span>\n<span class=\"token function selector\">\\bibitem</span><span class=\"token punctuation\">{</span>ref1<span class=\"token punctuation\">}</span>\nReference one.\n<span class=\"token function selector\">\\end</span><span class=\"token punctuation\">{</span><span class=\"token keyword\">thebibliography</span><span class=\"token punctuation\">}</span>\n<span class=\"token function selector\">\\end</span><span class=\"token punctuation\">{</span><span class=\"token keyword\">document</span><span class=\"token punctuation\">}</span></code></pre></div>\n<h2>写伪代码</h2>\n<p>使用 <code class=\"language-text\">algorithmicx</code> 包</p>\n<p>基本命令：</p>\n<div class=\"gatsby-highlight\" data-language=\"latex\"><pre class=\"language-latex\"><code class=\"language-latex\"><span class=\"token function selector\">\\State</span> &lt;text>\n\n<span class=\"token function selector\">\\If</span><span class=\"token punctuation\">{</span>&lt;condition><span class=\"token punctuation\">}</span> &lt;text> <span class=\"token function selector\">\\EndIf</span>\n\n<span class=\"token function selector\">\\If</span><span class=\"token punctuation\">{</span>&lt;condition><span class=\"token punctuation\">}</span> &lt;text> <span class=\"token function selector\">\\Else</span> &lt;text> <span class=\"token function selector\">\\EndIf</span>\n\n<span class=\"token function selector\">\\If</span><span class=\"token punctuation\">{</span>&lt;condition><span class=\"token punctuation\">}</span> &lt;text> <span class=\"token function selector\">\\ElsIf</span><span class=\"token punctuation\">{</span>&lt;condition><span class=\"token punctuation\">}</span>  &lt;text> <span class=\"token function selector\">\\Else</span> &lt;text> <span class=\"token function selector\">\\EndIf</span>\n\n<span class=\"token function selector\">\\For</span><span class=\"token punctuation\">{</span>&lt;condition><span class=\"token punctuation\">}</span> &lt;text> <span class=\"token function selector\">\\EndFor</span>\n\n<span class=\"token function selector\">\\ForAll</span><span class=\"token punctuation\">{</span>&lt;condition><span class=\"token punctuation\">}</span> &lt;text> <span class=\"token function selector\">\\EndFor</span>\n\n<span class=\"token function selector\">\\While</span><span class=\"token punctuation\">{</span>&lt;condition><span class=\"token punctuation\">}</span> &lt;text> <span class=\"token function selector\">\\EndWhile</span>\n\n<span class=\"token function selector\">\\Repeat</span> &lt;text> <span class=\"token function selector\">\\Until</span><span class=\"token punctuation\">{</span>&lt;condition><span class=\"token punctuation\">}</span>\n\n<span class=\"token function selector\">\\Loop</span> &lt;text> <span class=\"token function selector\">\\EndLoop</span>\n\n<span class=\"token function selector\">\\Require</span> &lt;text>\n\n<span class=\"token function selector\">\\Ensure</span> &lt;text>\n\n<span class=\"token function selector\">\\Function</span><span class=\"token punctuation\">{</span>&lt;name><span class=\"token punctuation\">}</span><span class=\"token punctuation\">{</span>&lt;params><span class=\"token punctuation\">}</span> &lt;body> <span class=\"token function selector\">\\EndFunction</span>\n\n<span class=\"token function selector\">\\State</span> <span class=\"token function selector\">\\Return</span> &lt;text>\n\n<span class=\"token function selector\">\\Comment</span><span class=\"token punctuation\">{</span>&lt;text><span class=\"token punctuation\">}</span></code></pre></div>\n<p>修改<code class=\"language-text\">algorithem</code>, <code class=\"language-text\">require</code>, <code class=\"language-text\">ensure</code> 标签：</p>\n<div class=\"gatsby-highlight\" data-language=\"latex\"><pre class=\"language-latex\"><code class=\"language-latex\"><span class=\"token function selector\">\\floatname</span><span class=\"token punctuation\">{</span>algorithm<span class=\"token punctuation\">}</span><span class=\"token punctuation\">{</span>算法<span class=\"token punctuation\">}</span>\n<span class=\"token function selector\">\\renewcommand</span><span class=\"token punctuation\">{</span><span class=\"token function selector\">\\algorithmicrequire</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">{</span><span class=\"token function selector\">\\textbf</span><span class=\"token punctuation\">{</span>输入:<span class=\"token punctuation\">}</span><span class=\"token punctuation\">}</span>\n<span class=\"token function selector\">\\renewcommand</span><span class=\"token punctuation\">{</span><span class=\"token function selector\">\\algorithmicensure</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">{</span><span class=\"token function selector\">\\textbf</span><span class=\"token punctuation\">{</span>输出:<span class=\"token punctuation\">}</span><span class=\"token punctuation\">}</span></code></pre></div>\n<p>例子：</p>\n<div class=\"gatsby-highlight\" data-language=\"latex\"><pre class=\"language-latex\"><code class=\"language-latex\"><span class=\"token function selector\">\\documentclass</span><span class=\"token punctuation\">[</span>UTF8<span class=\"token punctuation\">]</span><span class=\"token punctuation\">{</span><span class=\"token keyword\">ctexart</span><span class=\"token punctuation\">}</span>\n<span class=\"token function selector\">\\usepackage</span><span class=\"token punctuation\">{</span><span class=\"token keyword\">cite</span><span class=\"token punctuation\">}</span>\n<span class=\"token function selector\">\\usepackage</span><span class=\"token punctuation\">{</span><span class=\"token keyword\">algorithm</span><span class=\"token punctuation\">}</span>\n<span class=\"token function selector\">\\usepackage</span><span class=\"token punctuation\">{</span><span class=\"token keyword\">algorithmicx</span><span class=\"token punctuation\">}</span>\n<span class=\"token function selector\">\\usepackage</span><span class=\"token punctuation\">{</span><span class=\"token keyword\">algpseudocode</span><span class=\"token punctuation\">}</span>\n<span class=\"token function selector\">\\floatname</span><span class=\"token punctuation\">{</span>algorithm<span class=\"token punctuation\">}</span><span class=\"token punctuation\">{</span>算法<span class=\"token punctuation\">}</span>\n<span class=\"token function selector\">\\renewcommand</span><span class=\"token punctuation\">{</span><span class=\"token function selector\">\\algorithmicrequire</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">{</span><span class=\"token function selector\">\\textbf</span><span class=\"token punctuation\">{</span>数据:<span class=\"token punctuation\">}</span><span class=\"token punctuation\">}</span>\n<span class=\"token function selector\">\\renewcommand</span><span class=\"token punctuation\">{</span><span class=\"token function selector\">\\algorithmicensure</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">{</span><span class=\"token function selector\">\\textbf</span><span class=\"token punctuation\">{</span>输出:<span class=\"token punctuation\">}</span><span class=\"token punctuation\">}</span>\n<span class=\"token function selector\">\\begin</span><span class=\"token punctuation\">{</span><span class=\"token keyword\">document</span><span class=\"token punctuation\">}</span>\n\t<span class=\"token function selector\">\\begin</span><span class=\"token punctuation\">{</span><span class=\"token keyword\">algorithm</span><span class=\"token punctuation\">}</span>\n\t\t<span class=\"token function selector\">\\begin</span><span class=\"token punctuation\">{</span><span class=\"token keyword\">algorithmic</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">[</span>1<span class=\"token punctuation\">]</span>\n\t\t\t<span class=\"token function selector\">\\Require</span> 两个数相加\n\t\t\t<span class=\"token function selector\">\\Ensure</span> 两个数的和\n\t\t\t<span class=\"token function selector\">\\Function</span> <span class=\"token punctuation\">{</span>Add<span class=\"token punctuation\">}</span><span class=\"token punctuation\">{</span><span class=\"token equation string\">$num1, num2$</span><span class=\"token punctuation\">}</span>\n\t\t\t\t<span class=\"token function selector\">\\State</span> <span class=\"token equation string\">$result <span class=\"token equation-command regex\">\\gets</span> num1 + num2$</span>\n\t\t\t\t<span class=\"token function selector\">\\State</span> <span class=\"token function selector\">\\Return</span><span class=\"token punctuation\">{</span><span class=\"token equation string\">$result$</span><span class=\"token punctuation\">}</span>\n\t\t\t<span class=\"token function selector\">\\EndFunction</span>\n\t\t<span class=\"token function selector\">\\end</span><span class=\"token punctuation\">{</span><span class=\"token keyword\">algorithmic</span><span class=\"token punctuation\">}</span>\n\t<span class=\"token function selector\">\\end</span><span class=\"token punctuation\">{</span><span class=\"token keyword\">algorithm</span><span class=\"token punctuation\">}</span>\n<span class=\"token function selector\">\\end</span><span class=\"token punctuation\">{</span><span class=\"token keyword\">document</span><span class=\"token punctuation\">}</span></code></pre></div>\n<h2>数学符号以及希腊字母</h2>\n<p>参考 <a href=\"http://www.mohu.org/info/lshort-cn.pdf\">常用数学符号的 LaTeX 表示方法</a></p>\n<h2>学习资料</h2>\n<ol>\n<li><a href=\"http://liam0205.me/2014/09/08/latex-introduction/\">一份其实很短的 LaTex 入门文档</a></li>\n<li><a href=\"http://www.mohu.org/info/lshort-cn.pdf\">一份不太简短的 LATEX2e 介绍</a></li>\n<li><a href=\"http://hustsxh.is-programmer.com/posts/38801.html\">LaTeX/Algorithms 伪代码</a></li>\n<li><a href=\"https://cn.sharelatex.com\">ShareLatex</a></li>\n</ol>"}},{"node":{"id":"b7f964dd-2b7b-5288-ad3e-35e10f39269e","timeToRead":2,"frontmatter":{"title":"generator","date":"Nov 24, 2016","tags":["前端","JavaScript","ES6"]},"fields":{"slug":"/posts/generator/"},"excerpt":"<p>Generator 是一种可以暂停的函数，通过使用 <code class=\"language-text\">yield</code> 来进行控制。</p>\n<!-- more -->\n<h2>基本</h2>\n<p>本文通过一段代码来解释 generator 的机制。</p>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">function</span> <span class=\"token operator\">*</span><span class=\"token function\">foo</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">var</span> a <span class=\"token operator\">=</span> <span class=\"token keyword\">yield</span> <span class=\"token number\">5</span><span class=\"token punctuation\">;</span>\n    console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">yield</span> a<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">return</span> a<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">let</span> it <span class=\"token operator\">=</span> <span class=\"token function\">foo</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\nit<span class=\"token punctuation\">.</span><span class=\"token function\">next</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// 1</span>\n<span class=\"token comment\">// { value: 5, done: false }</span>\nit<span class=\"token punctuation\">.</span><span class=\"token function\">next</span><span class=\"token punctuation\">(</span><span class=\"token number\">10</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// 2</span>\n<span class=\"token comment\">// { value: 10, done: false }</span>\nit<span class=\"token punctuation\">.</span><span class=\"token function\">next</span><span class=\"token punctuation\">(</span><span class=\"token number\">20</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// 3</span>\n<span class=\"token comment\">// 20</span>\n<span class=\"token comment\">// { value: 20, done: true }</span>\nit<span class=\"token punctuation\">.</span><span class=\"token function\">next</span><span class=\"token punctuation\">(</span><span class=\"token number\">30</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// 4</span>\n<span class=\"token comment\">// { value: undefined, done: true }</span></code></pre></div>\n<p>generator 一种特殊的函数，其通过在 <code class=\"language-text\">function</code> 和函数签名之间加上一个 <code class=\"language-text\">*</code> 来定义，<code class=\"language-text\">*</code> 的位置没有要求，因此，以下任何一种方式都是合法的：</p>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">function</span> <span class=\"token operator\">*</span><span class=\"token function\">foo</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token comment\">// ...</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">function</span><span class=\"token operator\">*</span> <span class=\"token function\">bar</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token comment\">// ...</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">function</span><span class=\"token operator\">*</span><span class=\"token function\">baz</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token comment\">// ...</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>首先通过调用 <code class=\"language-text\">foo()</code> 来生成一个迭代器。接着通过调用这个迭代器的 <code class=\"language-text\">next</code> 方法可以控制该函数的流程。</p>"}},{"node":{"id":"9488ecdf-6d1a-5665-9d8b-b08fec38a1f8","timeToRead":1,"frontmatter":{"title":"Loose Equal","date":"Nov 18, 2016","tags":["前端","JavaScript"]},"fields":{"slug":"/posts/loose-equal/"},"excerpt":null}},{"node":{"id":"10f33f72-61e3-57b3-8922-97b08cab696a","timeToRead":1,"frontmatter":{"title":"《编写可维护的 JavaScript》读后感","date":"Nov 07, 2016","tags":["JavaScript","读后感","前端"]},"fields":{"slug":"/posts/maintainable-javascript/"},"excerpt":"<p>今天读了《编写可维护的 JavaScript》，基本上是用很快的速度把这本书看完了。</p>\n<p>不得不感叹一下前端变化之快，书中很多东西现在都有了变化。这本书比较适合 JavaScript 的初学者，很多内容都是老生常谈的了。比如缩进、是否使用分号、变量命名等等，这些东西其实在项目中开启 ESLint 或者 JSLint 之后多写点代码就有养成习惯了。</p>"}},{"node":{"id":"07849c16-43d6-50ef-a27f-0be502cbb6b3","timeToRead":1,"frontmatter":{"title":"在前端压缩图片","date":"Nov 07, 2016","tags":["前端"]},"fields":{"slug":"/posts/compress-image-at-front-ent/"},"excerpt":"<p>前端经常有上传图片的需求，比如上传头像，但用户可能会选择一张很大的图片，这个时候我们可以选择将图片压缩，然后再上传。</p>\n<p>压缩的思路如下：</p>\n<ol>\n<li>获取图片文件</li>\n<li>将文件转为 Blob URL 或者 Data URL</li>\n<li>将该 URL 赋值给一个 Image 对象</li>\n<li>在 Image 对象加载完毕之后，将该图片绘制到 Canvas 上面</li>\n<li>然后使用 Canvas 的 toDataURL 或者 toBlob 方法，设定图片输出质量进行压缩</li></ol>"}},{"node":{"id":"e35cb00d-8a40-5823-80d8-f62fbff68298","timeToRead":2,"frontmatter":{"title":"关于原型","date":"Oct 20, 2016","tags":["前端","JavaScript"]},"fields":{"slug":"/posts/prototype/"},"excerpt":"<p>JavaScript 是目前唯一广泛使用的基于原型的语言，然而，JavaScript 中掺杂了许多类的语法元素，比如 <code class=\"language-text\">new</code> ，<code class=\"language-text\">instanceof</code>，<code class=\"language-text\">class</code>，这些东西掩盖了 JavaScript 的本质。实际上，JavaScript 中没有类，本文梳理了 <code class=\"language-text\">[[Prototype]]</code> ，<code class=\"language-text\">[[Get]]</code> 和 <code class=\"language-text\">[[Put]]</code>，理解它们，会对 JavaScript 有更深刻的理解。</p>"}}],"pathPrefix":"","first":false,"last":false,"index":3,"pageCount":8,"additionalContext":{}}}