{"pageContext":{"isCreatedByStatefulCreatePages":false,"group":[{"node":{"id":"adf64065-4c0e-5182-8ad8-8ba047cfa882","timeToRead":3,"frontmatter":{"title":"UIAlertController 学习笔记（二）","date":"Jan 28, 2016","tags":["学习笔记","技术","开发","Swift","iOS"]},"fields":{"slug":"/posts/note-of-uialertcontroller-two/"},"excerpt":"<p>上次写了关于 UIAlertController 中对话框模式的内容，今天就写一下上拉菜单模式的内容，顺便再写一点关于 UIPopoverPresentationController 的内容。</p>\n<!-- more -->\n<h1>正文</h1>\n<h2>上次留下的问题</h2>\n<p><a href=\"http://zhuscat.com/2016/01/19/note-of-uialertcontroller-one/\">上次</a>在最后写了一个尝试丰富上面的例子的板块，这次就先直接给出代码，再写其他内容。关于代码的内容就不再多做解释。</p>"}},{"node":{"id":"03a34fca-bddf-5351-b2e6-617cff1705eb","timeToRead":1,"frontmatter":{"title":"可视化格式模型学习笔记","date":"Jan 28, 2016","tags":["前端","学习笔记","开发","CSS"]},"fields":{"slug":"/posts/note-of-css-box/"},"excerpt":"<p>个人认为，对于 CSS 盒模型、定位和浮动的理解，是学习 CSS 的一个核心，理解了它们，相信布局的问题的解决了许多，这篇笔记能帮助你快速的回忆起这些内容，图片来自 <a href=\"http://www.w3school.com.cn/index.html\">W3School</a> 。</p>\n<!-- more -->\n<h1>正文</h1>\n<h2>盒模型</h2>\n<p><img src=\"https://i.loli.net/2018/11/17/5befc2267e26f.gif\" alt=\"盒模型\"></p>\n<p>内边距、边框、外边距也可以应用单独的边。外边距可以是负值。</p>\n<p><strong>注：</strong>IE的早期版本，包括IE6，在混杂模式中使用自己的非标准模型，认为width属性是内容、内边距和边框宽度的总和。</p>"}},{"node":{"id":"5bc5ceeb-8893-558f-9376-18c93c75219c","timeToRead":3,"frontmatter":{"title":"CSS 选择器学习笔记","date":"Jan 28, 2016","tags":["前端","学习笔记","开发","CSS"]},"fields":{"slug":"/posts/css-selector/"},"excerpt":"<p>最近需要写一些前端的东西，几个月前也是学习了前端的知识，然后做了一些东西出来，几个月不写不看，发现忘了好多东西，以前也没做什么笔记，现在觉得要是当时做了笔记会好很多，所以现在写一些笔记可以给以后回顾。</p>\n<!-- more -->\n<h1>正文</h1>\n<h2>常用的选择器</h2>\n<h3>类型选择器</h3>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">p {color: black;}\nh1 {font-weight: bold;}</code></pre></div>\n<h3>后代选择器</h3>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">/* 作用于 blockquote 的所有标签为 p 的后代 */\nblockquote p {padding-left: 2em;}</code></pre></div>\n<h3>ID 选择器与类选择器</h3>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">#intro {font-weight: bold;}\n.date-posted {color: #ccc;}</code></pre></div>\n<h3>伪类</h3>"}},{"node":{"id":"1a901cb7-129f-5acc-9641-ca7bdd837db5","timeToRead":2,"frontmatter":{"title":"UIAlertController 学习笔记（一）","date":"Jan 19, 2016","tags":["学习笔记","技术","开发","Swift","iOS"]},"fields":{"slug":"/posts/note-of-uialertcontroller-one/"},"excerpt":"<p><code class=\"language-text\">UIAlertController</code> 可以用来创建对话框和上拉式菜单，这是一个在开发中可能经常需要用到的东西，来看一下具体的使用方法吧。</p>\n<!-- more -->\n<h1>正文</h1>\n<h2>创建一个对话框</h2>\n<p>不多说，直接上完整的代码，再详细的解释一下。</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">@IBAction func showAlert(sender: UIButton) {\n    //创建UIAlertController实例\n    let alertController = UIAlertController(title: &quot;Demo&quot;, message: &quot;This is a demo&quot;, preferredStyle: .Alert)\n    //创建UIAlertAction实例\n    let okAction = UIAlertAction(title: &quot;OK&quot;, style: UIAlertActionStyle.Default, handler: nil)\n    let cancelAction = UIAlertAction(title: &quot;Cancel&quot;, style: UIAlertActionStyle.Cancel, handler: nil)\n    //将动作按钮添加到控制器\n    alertController.addAction(okAction)\n    alertController.addAction(cancelAction)\n\n    presentViewController(alertController, animated: true, completion: nil)\n\n}</code></pre></div>\n<p>这个函数已经与一个 <code class=\"language-text\">UIButton</code> 连接了，当点击所连接的Button的时候，就会调用这个函数。\n让我们一行一行地来看</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">let alertController = UIAlertController(title: &quot;Demo&quot;, message: &quot;This is a demo&quot;, preferredStyle: .Alert)</code></pre></div>\n"}},{"node":{"id":"5cd5e876-9547-5009-be8a-c52046295ace","timeToRead":3,"frontmatter":{"title":"NSDate 学习笔记","date":"Jan 17, 2016","tags":["学习笔记","技术","开发","Swift","iOS"]},"fields":{"slug":"/posts/note-of-nsdate/"},"excerpt":"<p>日期与时间是一个在开发中经常要用到的，最近看到了一篇 <a href=\"http://swift.gg/2015/12/14/a-beginners-guide-to-nsdate-in-swift/\">NSDate 的教程</a>，写的很详细，但是不免有些枯燥与乏味，即使是一个 iOS 初学者，也能很快明白 NSDate 的内容，其实主要就是一些函数的使用，只要照着下面的代码打一遍，弄明白每一条语句的作用，基本上就是会使用了，我也是照着那篇教程打了一遍，顺便加了注释，所以这次就直接给出代码了。</p>"}},{"node":{"id":"07f6a0cd-4f96-5ec6-9f47-2ec705e8043e","timeToRead":2,"frontmatter":{"title":"NSOperation 与 Dispatch Queues 学习笔记","date":"Jan 14, 2016","tags":["学习笔记","技术","开发","Swift","iOS"]},"fields":{"slug":"/posts/note-of-nsoperation-and-dispatch-queues/"},"excerpt":"<p>本文为 NSOperation 和 Dispatch Queues 的学习笔记，参考资料为<a href=\"http://swift.gg/2016/01/08/ios-concurrency-getting-started-with-nsoperation-and-dispatch-queues/\">iOS 并发：从 NSOperation 和 Dispatch Queues 开始</a>，文章基本上可以算是这篇文章的一个概括，将各个函数的用法摘录下来了，对于学习过这方面内容的人可以起到快速回顾的作用。</p>"}},{"node":{"id":"ba31f229-872b-5df1-b00c-cc498f3c7059","timeToRead":1,"frontmatter":{"title":"谈谈跨年","date":"Dec 31, 2015","tags":["随笔","跨年","新年","心情","生活","感想"]},"fields":{"slug":"/posts/new-year-2016/"},"excerpt":"<p>再见，2015。</p>\n<p>你好，2016。</p>\n<!-- more -->\n<h2>正文</h2>\n<p>在即将离别2015迎来2016之际，这次，我想回想以下在过去的岁月中，在跨年的这个时刻，我都在做什么。</p>\n<p>对于小学时候的场景，在我记忆中已经比较模糊了，只记得那时候对跨年还没有什么特别的概念吧。对于那时候的我来说，元旦更多的是意味着假期。自然，那时的我不会等待着跨年。从二十三点五十九分到新的一年的零点零零分，我是在香甜的睡梦中度过的。这一段时间跟其他时间并没有什么不同，唯一可能不同…</p>"}},{"node":{"id":"a3b5f5db-bced-5e59-b6fd-598121b22d8e","timeToRead":6,"frontmatter":{"title":"使用GitHub，GitCafe和Hexo创建一个独立博客","date":"Dec 25, 2015","tags":["教程","创建博客"]},"fields":{"slug":"/posts/build-a-blog/"},"excerpt":"<h1>前言</h1>\n<p>这篇文章描述了如何使用GitHub，GitCafe和Hexo创建一个独立博客。虽然网上有许多这方面的教程了，但是在我建立这个独立博客的过程中，发生了许多不是我所看的一篇教程就所能解决的问题，因此，我决定以我创建这个博客的视角来写一篇教程。我创建这个博客所用的平台是Mac OS …</p>"}},{"node":{"id":"b823bfd2-ee8e-5409-af79-053d8f1736cd","timeToRead":1,"frontmatter":{"title":"一个属于自己的博客","date":"Dec 20, 2015","tags":["随笔"]},"fields":{"slug":"/posts/一个属于自己的博客/"},"excerpt":"<p>其实从今年年初就想要创建一个属于自己的博客，也查询了一些教程，但是最终还是没有付诸行动。这个周末从学校回到家中，不知怎么的，昨天晚上心血来潮，就是想要马上创建一个自己的博客（也许是闲着蛋疼），之前知道的各种创建个人博客的方法中，好像用Github Pages是比较简便的一种方法…</p>"}}],"pathPrefix":"","first":false,"last":true,"index":8,"pageCount":8,"additionalContext":{}}}